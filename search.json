[
  {
    "objectID": "WorkshopR2025/sem_v2.html",
    "href": "WorkshopR2025/sem_v2.html",
    "title": "Pemodelan SEM (Structural Equation Modeling)",
    "section": "",
    "text": "Import Data. Jangan lupa untuk menginstall package readxl terlebih dahulu karena data yang digunakan adalah file dengan ekstensi .xlsx.\n\nlibrary(readxl)\ndatasem &lt;- read_excel('data/datasem.xlsx')\nhead(datasem)\n\n# A tibble: 6 × 45\n  Perusahaan Provinsi   Pulau    A1    A2    A3    A4    A5    A6    A7    A8\n       &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1          1 Jawa Barat Jawa      4     5     5     4     4     4     5     5\n2          2 Jawa Timur Jawa      5     5     5     5     4     5     5     5\n3          3 Jawa Timur Jawa      4     4     4     4     4     4     5     5\n4          4 Jawa Barat Jawa      4     4     3     4     4     4     4     4\n5          5 Jawa Timur Jawa      4     4     4     3     4     4     4     4\n6          6 Jawa Timur Jawa      4     4     5     4     4     4     4     4\n# ℹ 34 more variables: Atotal &lt;dbl&gt;, B1 &lt;dbl&gt;, B2 &lt;dbl&gt;, Btotal &lt;dbl&gt;,\n#   C1 &lt;dbl&gt;, C2 &lt;dbl&gt;, Ctotal &lt;dbl&gt;, D1 &lt;dbl&gt;, D2 &lt;dbl&gt;, D3 &lt;dbl&gt;, D4 &lt;dbl&gt;,\n#   Dtotal &lt;dbl&gt;, E1 &lt;dbl&gt;, E2 &lt;dbl&gt;, E3 &lt;dbl&gt;, E4 &lt;dbl&gt;, E5 &lt;dbl&gt;, E6 &lt;dbl&gt;,\n#   E7 &lt;dbl&gt;, E8 &lt;dbl&gt;, E9 &lt;dbl&gt;, E10 &lt;dbl&gt;, E11 &lt;dbl&gt;, E12 &lt;dbl&gt;,\n#   Etotal &lt;dbl&gt;, F1 &lt;dbl&gt;, F2 &lt;dbl&gt;, F3 &lt;dbl&gt;, F4 &lt;dbl&gt;, F5 &lt;dbl&gt;, F6 &lt;dbl&gt;,\n#   F7 &lt;dbl&gt;, F8 &lt;dbl&gt;, Ftotal &lt;dbl&gt;\n\n\n\nstr(datasem)\n\ntibble [300 × 45] (S3: tbl_df/tbl/data.frame)\n $ Perusahaan: num [1:300] 1 2 3 4 5 6 7 8 9 10 ...\n $ Provinsi  : chr [1:300] \"Jawa Barat\" \"Jawa Timur\" \"Jawa Timur\" \"Jawa Barat\" ...\n $ Pulau     : chr [1:300] \"Jawa\" \"Jawa\" \"Jawa\" \"Jawa\" ...\n $ A1        : num [1:300] 4 5 4 4 4 4 4 5 4 5 ...\n $ A2        : num [1:300] 5 5 4 4 4 4 4 5 4 5 ...\n $ A3        : num [1:300] 5 5 4 3 4 5 4 5 3 5 ...\n $ A4        : num [1:300] 4 5 4 4 3 4 4 5 3 5 ...\n $ A5        : num [1:300] 4 4 4 4 4 4 4 5 3 5 ...\n $ A6        : num [1:300] 4 5 4 4 4 4 4 5 3 4 ...\n $ A7        : num [1:300] 5 5 5 4 4 4 4 5 3 5 ...\n $ A8        : num [1:300] 5 5 5 4 4 4 4 5 3 4 ...\n $ Atotal    : num [1:300] 36 39 34 31 31 33 32 40 26 38 ...\n $ B1        : num [1:300] 4 4 4 4 3 5 3 3 3 4 ...\n $ B2        : num [1:300] 4 4 4 3 4 4 3 3 2 4 ...\n $ Btotal    : num [1:300] 8 8 8 7 7 9 6 6 5 8 ...\n $ C1        : num [1:300] 4 4 4 4 4 4 4 5 3 4 ...\n $ C2        : num [1:300] 4 4 4 4 4 4 4 4 3 4 ...\n $ Ctotal    : num [1:300] 8 8 8 8 8 8 8 9 6 8 ...\n $ D1        : num [1:300] 4 5 4 4 4 4 4 4 3 4 ...\n $ D2        : num [1:300] 4 5 4 3 4 5 4 4 2 4 ...\n $ D3        : num [1:300] 4 5 4 4 4 4 4 4 3 4 ...\n $ D4        : num [1:300] 4 5 4 5 4 4 4 4 3 4 ...\n $ Dtotal    : num [1:300] 16 20 16 16 16 17 16 16 11 16 ...\n $ E1        : num [1:300] 5 5 4 4 4 4 4 4 3 5 ...\n $ E2        : num [1:300] 5 5 4 4 4 5 4 4 3 5 ...\n $ E3        : num [1:300] 5 5 4 4 4 5 4 5 4 5 ...\n $ E4        : num [1:300] 4 5 4 3 4 5 4 4 3 4 ...\n $ E5        : num [1:300] 4 5 4 4 3 5 4 4 3 4 ...\n $ E6        : num [1:300] 4 5 4 4 4 4 4 4 3 4 ...\n $ E7        : num [1:300] 4 5 4 4 4 5 4 4 3 4 ...\n $ E8        : num [1:300] 4 5 4 4 3 5 4 4 3 4 ...\n $ E9        : num [1:300] 4 5 4 4 4 4 4 4 3 4 ...\n $ E10       : num [1:300] 4 5 4 4 4 5 4 5 3 4 ...\n $ E11       : num [1:300] 4 5 4 3 3 5 4 5 3 4 ...\n $ E12       : num [1:300] 5 5 4 4 4 5 4 5 3 5 ...\n $ Etotal    : num [1:300] 52 60 48 46 45 57 48 52 37 52 ...\n $ F1        : num [1:300] 5 5 4 4 4 5 4 4 2 4 ...\n $ F2        : num [1:300] 4 5 4 4 4 5 4 4 3 3 ...\n $ F3        : num [1:300] 4 5 4 4 4 4 4 4 2 3 ...\n $ F4        : num [1:300] 4 5 4 4 4 5 4 5 3 4 ...\n $ F5        : num [1:300] 4 5 4 4 3 5 4 4 3 3 ...\n $ F6        : num [1:300] 4 5 4 4 3 4 4 5 3 4 ...\n $ F7        : num [1:300] 4 5 4 4 3 4 4 4 3 4 ...\n $ F8        : num [1:300] 4 5 4 4 4 5 4 4 3 4 ...\n $ Ftotal    : num [1:300] 33 40 32 32 29 37 32 34 22 29 ...\n\n\nDataset ini berisi 6 variabel laten dan 44 indikator. Laten dan indikator yang digunakan dalam model PLS-SEM adalah sebagai berikut:\n\nfaktor =~ A1 + A2 + A3 + A4\npermintaan =~ B1 + B2\nindustri =~ C1 + C2\nstrategi =~ D1 + D2 + D3 + D4\nregulasi =~ E1 + E2 + E3 + E4 + E5 + E6\nkesempatan =~ F1 + F2 + F3 + F4\n\n\nData ini adalah data survey dengan isian likert untuk setiap indikatornya. Pertanyaan utama dalam penelitian ini adalah “Apakah faktor-faktor yang mempengaruhi kesempatan pelaku usaha ekspansi keluar pulau jawa”. Model SEM ini didasarkan pada teori Porter’s Five Forces."
  },
  {
    "objectID": "WorkshopR2025/sem_v2.html#eksplorasi-data",
    "href": "WorkshopR2025/sem_v2.html#eksplorasi-data",
    "title": "Pemodelan SEM (Structural Equation Modeling)",
    "section": "",
    "text": "Import Data. Jangan lupa untuk menginstall package readxl terlebih dahulu karena data yang digunakan adalah file dengan ekstensi .xlsx.\n\nlibrary(readxl)\ndatasem &lt;- read_excel('data/datasem.xlsx')\nhead(datasem)\n\n# A tibble: 6 × 45\n  Perusahaan Provinsi   Pulau    A1    A2    A3    A4    A5    A6    A7    A8\n       &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1          1 Jawa Barat Jawa      4     5     5     4     4     4     5     5\n2          2 Jawa Timur Jawa      5     5     5     5     4     5     5     5\n3          3 Jawa Timur Jawa      4     4     4     4     4     4     5     5\n4          4 Jawa Barat Jawa      4     4     3     4     4     4     4     4\n5          5 Jawa Timur Jawa      4     4     4     3     4     4     4     4\n6          6 Jawa Timur Jawa      4     4     5     4     4     4     4     4\n# ℹ 34 more variables: Atotal &lt;dbl&gt;, B1 &lt;dbl&gt;, B2 &lt;dbl&gt;, Btotal &lt;dbl&gt;,\n#   C1 &lt;dbl&gt;, C2 &lt;dbl&gt;, Ctotal &lt;dbl&gt;, D1 &lt;dbl&gt;, D2 &lt;dbl&gt;, D3 &lt;dbl&gt;, D4 &lt;dbl&gt;,\n#   Dtotal &lt;dbl&gt;, E1 &lt;dbl&gt;, E2 &lt;dbl&gt;, E3 &lt;dbl&gt;, E4 &lt;dbl&gt;, E5 &lt;dbl&gt;, E6 &lt;dbl&gt;,\n#   E7 &lt;dbl&gt;, E8 &lt;dbl&gt;, E9 &lt;dbl&gt;, E10 &lt;dbl&gt;, E11 &lt;dbl&gt;, E12 &lt;dbl&gt;,\n#   Etotal &lt;dbl&gt;, F1 &lt;dbl&gt;, F2 &lt;dbl&gt;, F3 &lt;dbl&gt;, F4 &lt;dbl&gt;, F5 &lt;dbl&gt;, F6 &lt;dbl&gt;,\n#   F7 &lt;dbl&gt;, F8 &lt;dbl&gt;, Ftotal &lt;dbl&gt;\n\n\n\nstr(datasem)\n\ntibble [300 × 45] (S3: tbl_df/tbl/data.frame)\n $ Perusahaan: num [1:300] 1 2 3 4 5 6 7 8 9 10 ...\n $ Provinsi  : chr [1:300] \"Jawa Barat\" \"Jawa Timur\" \"Jawa Timur\" \"Jawa Barat\" ...\n $ Pulau     : chr [1:300] \"Jawa\" \"Jawa\" \"Jawa\" \"Jawa\" ...\n $ A1        : num [1:300] 4 5 4 4 4 4 4 5 4 5 ...\n $ A2        : num [1:300] 5 5 4 4 4 4 4 5 4 5 ...\n $ A3        : num [1:300] 5 5 4 3 4 5 4 5 3 5 ...\n $ A4        : num [1:300] 4 5 4 4 3 4 4 5 3 5 ...\n $ A5        : num [1:300] 4 4 4 4 4 4 4 5 3 5 ...\n $ A6        : num [1:300] 4 5 4 4 4 4 4 5 3 4 ...\n $ A7        : num [1:300] 5 5 5 4 4 4 4 5 3 5 ...\n $ A8        : num [1:300] 5 5 5 4 4 4 4 5 3 4 ...\n $ Atotal    : num [1:300] 36 39 34 31 31 33 32 40 26 38 ...\n $ B1        : num [1:300] 4 4 4 4 3 5 3 3 3 4 ...\n $ B2        : num [1:300] 4 4 4 3 4 4 3 3 2 4 ...\n $ Btotal    : num [1:300] 8 8 8 7 7 9 6 6 5 8 ...\n $ C1        : num [1:300] 4 4 4 4 4 4 4 5 3 4 ...\n $ C2        : num [1:300] 4 4 4 4 4 4 4 4 3 4 ...\n $ Ctotal    : num [1:300] 8 8 8 8 8 8 8 9 6 8 ...\n $ D1        : num [1:300] 4 5 4 4 4 4 4 4 3 4 ...\n $ D2        : num [1:300] 4 5 4 3 4 5 4 4 2 4 ...\n $ D3        : num [1:300] 4 5 4 4 4 4 4 4 3 4 ...\n $ D4        : num [1:300] 4 5 4 5 4 4 4 4 3 4 ...\n $ Dtotal    : num [1:300] 16 20 16 16 16 17 16 16 11 16 ...\n $ E1        : num [1:300] 5 5 4 4 4 4 4 4 3 5 ...\n $ E2        : num [1:300] 5 5 4 4 4 5 4 4 3 5 ...\n $ E3        : num [1:300] 5 5 4 4 4 5 4 5 4 5 ...\n $ E4        : num [1:300] 4 5 4 3 4 5 4 4 3 4 ...\n $ E5        : num [1:300] 4 5 4 4 3 5 4 4 3 4 ...\n $ E6        : num [1:300] 4 5 4 4 4 4 4 4 3 4 ...\n $ E7        : num [1:300] 4 5 4 4 4 5 4 4 3 4 ...\n $ E8        : num [1:300] 4 5 4 4 3 5 4 4 3 4 ...\n $ E9        : num [1:300] 4 5 4 4 4 4 4 4 3 4 ...\n $ E10       : num [1:300] 4 5 4 4 4 5 4 5 3 4 ...\n $ E11       : num [1:300] 4 5 4 3 3 5 4 5 3 4 ...\n $ E12       : num [1:300] 5 5 4 4 4 5 4 5 3 5 ...\n $ Etotal    : num [1:300] 52 60 48 46 45 57 48 52 37 52 ...\n $ F1        : num [1:300] 5 5 4 4 4 5 4 4 2 4 ...\n $ F2        : num [1:300] 4 5 4 4 4 5 4 4 3 3 ...\n $ F3        : num [1:300] 4 5 4 4 4 4 4 4 2 3 ...\n $ F4        : num [1:300] 4 5 4 4 4 5 4 5 3 4 ...\n $ F5        : num [1:300] 4 5 4 4 3 5 4 4 3 3 ...\n $ F6        : num [1:300] 4 5 4 4 3 4 4 5 3 4 ...\n $ F7        : num [1:300] 4 5 4 4 3 4 4 4 3 4 ...\n $ F8        : num [1:300] 4 5 4 4 4 5 4 4 3 4 ...\n $ Ftotal    : num [1:300] 33 40 32 32 29 37 32 34 22 29 ...\n\n\nDataset ini berisi 6 variabel laten dan 44 indikator. Laten dan indikator yang digunakan dalam model PLS-SEM adalah sebagai berikut:\n\nfaktor =~ A1 + A2 + A3 + A4\npermintaan =~ B1 + B2\nindustri =~ C1 + C2\nstrategi =~ D1 + D2 + D3 + D4\nregulasi =~ E1 + E2 + E3 + E4 + E5 + E6\nkesempatan =~ F1 + F2 + F3 + F4\n\n\nData ini adalah data survey dengan isian likert untuk setiap indikatornya. Pertanyaan utama dalam penelitian ini adalah “Apakah faktor-faktor yang mempengaruhi kesempatan pelaku usaha ekspansi keluar pulau jawa”. Model SEM ini didasarkan pada teori Porter’s Five Forces."
  },
  {
    "objectID": "WorkshopR2025/sem_v2.html#model-1",
    "href": "WorkshopR2025/sem_v2.html#model-1",
    "title": "Pemodelan SEM (Structural Equation Modeling)",
    "section": "Model 1",
    "text": "Model 1\ninstall package lavaan dan semPlot untuk analisis SEM. Paket lavaan digunakan untuk analisis SEM, sedangkan paket semPlot digunakan untuk memvisualisasikan model SEM.\ninstall.packages(\"lavaan\") dan install.packages(\"semPlot\").\n\nlibrary(lavaan)\nlibrary(semPlot)\n\nMembuat Spefisikasi Model.\n\nsem.model = \"\nfaktor =~ A1 + A2 + A3 + A4\npermintaan =~ B1 + B2  \nindustri =~ C1 + C2  \nstrategi =~ D1 + D2 + D3 + D4\nregulasi =~ E1 + E2 + E3 + E4 + E5 + E6\nkesempatan =~ F1 + F2 + F3 + F4\n\nkesempatan ~ faktor + permintaan + industri + strategi + regulasi\"\n\nKeterangan:\n\nDefinisi variabel laten (=~)\n\nRumus regresi (~)\n\nRumus (ko)varians (~~)\n\nEstimasi Model.\nUntuk estimasi model SEM, kita menggunakan fungsi sem() dari paket lavaan. Fungsi ini akan mengestimasi model sudah kita buat.\n\nsem.fit = sem(sem.model, data = datasem)\n\nSebelum melihat hasil output estimasi, kita dapat melihar secara visual model SEM yang telah kita buat dengan menggunakan fungsi semPaths() dari paket semPlot.\n\nsemPaths(sem.fit)\n\n\n\n\n\n\n\n\nOutput Model:\nArgumen standardized=TRUE untuk menampilkan hasil analisis dengan koefisien standar (standardized coefficients). Dengan koefisien standar, kita dapat membandingkan kekuatan hubungan antar variabel laten. Semakin besar nilai koefisien standar, semakin besar hubungan variabel tersebut terhadap variabel lainnya.\n\nsummary(sem.fit, standardized=TRUE)\n\nlavaan 0.6-19 ended normally after 90 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        59\n\n  Number of observations                           300\n\nModel Test User Model:\n                                                      \n  Test statistic                               555.757\n  Degrees of freedom                               194\n  P-value (Chi-square)                           0.000\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)   Std.lv  Std.all\n  faktor =~                                                             \n    A1                1.000                               0.566    0.706\n    A2                1.266    0.089   14.271    0.000    0.717    0.872\n    A3                1.312    0.094   13.991    0.000    0.743    0.854\n    A4                1.261    0.091   13.913    0.000    0.714    0.849\n  permintaan =~                                                         \n    B1                1.000                               0.725    0.813\n    B2                1.020    0.063   16.072    0.000    0.739    0.935\n  industri =~                                                           \n    C1                1.000                               0.692    0.893\n    C2                1.035    0.044   23.446    0.000    0.717    0.911\n  strategi =~                                                           \n    D1                1.000                               0.723    0.922\n    D2                0.973    0.033   29.472    0.000    0.703    0.941\n    D3                0.972    0.043   22.590    0.000    0.702    0.855\n    D4                0.817    0.042   19.325    0.000    0.590    0.797\n  regulasi =~                                                           \n    E1                1.000                               0.736    0.888\n    E2                0.929    0.039   23.666    0.000    0.684    0.897\n    E3                0.950    0.043   22.088    0.000    0.699    0.870\n    E4                1.015    0.039   25.697    0.000    0.747    0.927\n    E5                0.985    0.042   23.464    0.000    0.725    0.894\n    E6                0.913    0.045   20.186    0.000    0.673    0.834\n  kesempatan =~                                                         \n    F1                1.000                               0.771    0.900\n    F2                1.006    0.038   26.712    0.000    0.776    0.933\n    F3                1.033    0.042   24.672    0.000    0.796    0.905\n    F4                0.943    0.046   20.414    0.000    0.727    0.833\n\nRegressions:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)   Std.lv  Std.all\n  kesempatan ~                                                          \n    faktor            0.016    0.111    0.146    0.884    0.012    0.012\n    permintaan        0.042    0.059    0.705    0.481    0.039    0.039\n    industri          0.129    0.133    0.976    0.329    0.116    0.116\n    strategi          0.131    0.091    1.449    0.147    0.123    0.123\n    regulasi          0.685    0.077    8.860    0.000    0.654    0.654\n\nCovariances:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)   Std.lv  Std.all\n  faktor ~~                                                             \n    permintaan        0.233    0.034    6.785    0.000    0.568    0.568\n    industri          0.327    0.037    8.729    0.000    0.833    0.833\n    strategi          0.292    0.035    8.242    0.000    0.715    0.715\n    regulasi          0.343    0.039    8.730    0.000    0.822    0.822\n  permintaan ~~                                                         \n    industri          0.366    0.043    8.447    0.000    0.729    0.729\n    strategi          0.391    0.045    8.713    0.000    0.746    0.746\n    regulasi          0.332    0.043    7.797    0.000    0.623    0.623\n  industri ~~                                                           \n    strategi          0.437    0.043   10.274    0.000    0.874    0.874\n    regulasi          0.416    0.043    9.764    0.000    0.816    0.816\n  strategi ~~                                                           \n    regulasi          0.405    0.042    9.580    0.000    0.762    0.762\n\nVariances:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)   Std.lv  Std.all\n   .A1                0.323    0.029   11.229    0.000    0.323    0.502\n   .A2                0.161    0.018    8.902    0.000    0.161    0.239\n   .A3                0.205    0.022    9.430    0.000    0.205    0.271\n   .A4                0.198    0.021    9.552    0.000    0.198    0.280\n   .B1                0.269    0.032    8.457    0.000    0.269    0.339\n   .B2                0.078    0.025    3.161    0.002    0.078    0.126\n   .C1                0.122    0.014    8.515    0.000    0.122    0.203\n   .C2                0.106    0.014    7.549    0.000    0.106    0.171\n   .D1                0.093    0.011    8.749    0.000    0.093    0.151\n   .D2                0.063    0.008    7.476    0.000    0.063    0.114\n   .D3                0.182    0.017   10.625    0.000    0.182    0.270\n   .D4                0.200    0.018   11.219    0.000    0.200    0.365\n   .E1                0.145    0.014   10.563    0.000    0.145    0.211\n   .E2                0.114    0.011   10.395    0.000    0.114    0.195\n   .E3                0.156    0.014   10.845    0.000    0.156    0.242\n   .E4                0.091    0.010    9.488    0.000    0.091    0.141\n   .E5                0.133    0.013   10.462    0.000    0.133    0.201\n   .E6                0.198    0.018   11.224    0.000    0.198    0.304\n   .F1                0.139    0.014    9.697    0.000    0.139    0.190\n   .F2                0.090    0.011    8.221    0.000    0.090    0.130\n   .F3                0.140    0.015    9.540    0.000    0.140    0.181\n   .F4                0.233    0.021   10.912    0.000    0.233    0.306\n    faktor            0.321    0.047    6.841    0.000    1.000    1.000\n    permintaan        0.525    0.065    8.048    0.000    1.000    1.000\n    industri          0.480    0.049    9.751    0.000    1.000    1.000\n    strategi          0.522    0.050   10.406    0.000    1.000    1.000\n    regulasi          0.542    0.055    9.811    0.000    1.000    1.000\n   .kesempatan        0.122    0.015    8.068    0.000    0.206    0.206\n\n\nMemperoleh GOF (Goodness of Fit) model SEM.\n\nfitMeasures(sem.fit)\n\n                 npar                  fmin                 chisq \n               59.000                 0.926               555.757 \n                   df                pvalue        baseline.chisq \n              194.000                 0.000              7355.210 \n          baseline.df       baseline.pvalue                   cfi \n              231.000                 0.000                 0.949 \n                  tli                  nnfi                   rfi \n                0.940                 0.940                 0.910 \n                  nfi                  pnfi                   ifi \n                0.924                 0.776                 0.949 \n                  rni                  logl     unrestricted.logl \n                0.949             -4608.159             -4330.280 \n                  aic                   bic                ntotal \n             9334.318              9552.841               300.000 \n                 bic2                 rmsea        rmsea.ci.lower \n             9365.728                 0.079                 0.071 \n       rmsea.ci.upper        rmsea.ci.level          rmsea.pvalue \n                0.087                 0.900                 0.000 \n       rmsea.close.h0 rmsea.notclose.pvalue     rmsea.notclose.h0 \n                0.050                 0.410                 0.080 \n                  rmr            rmr_nomean                  srmr \n                0.024                 0.024                 0.035 \n         srmr_bentler   srmr_bentler_nomean                  crmr \n                0.035                 0.035                 0.037 \n          crmr_nomean            srmr_mplus     srmr_mplus_nomean \n                0.037                 0.035                 0.035 \n                cn_05                 cn_01                   gfi \n              123.804               132.033                 0.854 \n                 agfi                  pgfi                   mfi \n                0.810                 0.655                 0.547 \n                 ecvi \n                2.246 \n\n\nContoh trashold fit measures yang diterima:\n\nAtau kita bisa mengeluarkan fit measures tertentu saja, misalnya:\n\nfitMeasures(sem.fit)[c(3,5,9, 10, 23, 42,43)]\n\n       chisq       pvalue          cfi          tli        rmsea          gfi \n555.75679415   0.00000000   0.94922149   0.93953692   0.07884004   0.85421245 \n        agfi \n  0.80987500 \n\n\nVisualisi dengan koefisien.\n\nsemPaths(sem.fit, \"std\", color = list(lat = \"green\", man = \"yellow\"), \n         edge.color=\"black\", fade=FALSE)\n\n\n\n\n\n\n\n\n\nsemPaths(sem.fit, \"std\", color = list(lat = \"green\", man = \"yellow\"), \n         edge.color=\"black\", fade=FALSE, residuals=FALSE, exoCov=FALSE)"
  },
  {
    "objectID": "WorkshopR2025/sem_v2.html#model-2",
    "href": "WorkshopR2025/sem_v2.html#model-2",
    "title": "Pemodelan SEM (Structural Equation Modeling)",
    "section": "Model 2",
    "text": "Model 2\n\nsem.model2 = \"\nfaktor =~ A1 + A2 + A3 + A4\npermintaan =~ B1 + B2  \nindustri =~ C1 + C2  \nstrategi =~ D1 + D2 + D3 + D4\nregulasi =~ E1 + E2 + E3 + E4 + E5 + E6\nkesempatan =~ F1 + F2 + F3 + F4\n\nkesempatan ~ faktor + permintaan + industri + strategi + regulasi\n\nA1  ~~  A2\n\"\n\n\nsem.fit2 = sem(sem.model2, data = datasem)\n\nTerdapat perbaikan fit measures pada model.\n\nfitMeasures(sem.fit2)[c(3,5,9, 10, 23, 42,43)]\n\n       chisq       pvalue          cfi          tli        rmsea          gfi \n540.53457660   0.00000000   0.95121781   0.94161302   0.07747467   0.85881528 \n        agfi \n  0.81492365 \n\n\nOutput\n\nsummary(sem.fit2, standardized=TRUE)\n\nlavaan 0.6-19 ended normally after 96 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        60\n\n  Number of observations                           300\n\nModel Test User Model:\n                                                      \n  Test statistic                               540.535\n  Degrees of freedom                               193\n  P-value (Chi-square)                           0.000\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)   Std.lv  Std.all\n  faktor =~                                                             \n    A1                1.000                               0.539    0.672\n    A2                1.303    0.088   14.787    0.000    0.702    0.854\n    A3                1.396    0.108   12.968    0.000    0.752    0.864\n    A4                1.336    0.104   12.866    0.000    0.720    0.855\n  permintaan =~                                                         \n    B1                1.000                               0.724    0.813\n    B2                1.020    0.064   16.062    0.000    0.739    0.935\n  industri =~                                                           \n    C1                1.000                               0.692    0.892\n    C2                1.037    0.044   23.452    0.000    0.717    0.912\n  strategi =~                                                           \n    D1                1.000                               0.723    0.922\n    D2                0.973    0.033   29.468    0.000    0.703    0.941\n    D3                0.972    0.043   22.593    0.000    0.702    0.855\n    D4                0.817    0.042   19.327    0.000    0.590    0.797\n  regulasi =~                                                           \n    E1                1.000                               0.736    0.888\n    E2                0.929    0.039   23.657    0.000    0.684    0.897\n    E3                0.950    0.043   22.072    0.000    0.699    0.870\n    E4                1.015    0.040   25.673    0.000    0.747    0.927\n    E5                0.986    0.042   23.462    0.000    0.726    0.894\n    E6                0.914    0.045   20.189    0.000    0.673    0.834\n  kesempatan =~                                                         \n    F1                1.000                               0.771    0.900\n    F2                1.007    0.038   26.706    0.000    0.776    0.933\n    F3                1.033    0.042   24.671    0.000    0.796    0.905\n    F4                0.943    0.046   20.411    0.000    0.727    0.833\n\nRegressions:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)   Std.lv  Std.all\n  kesempatan ~                                                          \n    faktor            0.020    0.121    0.167    0.867    0.014    0.014\n    permintaan        0.042    0.059    0.709    0.478    0.039    0.039\n    industri          0.128    0.135    0.950    0.342    0.115    0.115\n    strategi          0.132    0.091    1.443    0.149    0.123    0.123\n    regulasi          0.684    0.078    8.811    0.000    0.654    0.654\n\nCovariances:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)   Std.lv  Std.all\n .A1 ~~                                                                 \n   .A2                0.068    0.019    3.588    0.000    0.068    0.269\n  faktor ~~                                                             \n    permintaan        0.224    0.034    6.676    0.000    0.573    0.573\n    industri          0.312    0.037    8.463    0.000    0.837    0.837\n    strategi          0.279    0.035    8.005    0.000    0.716    0.716\n    regulasi          0.327    0.039    8.456    0.000    0.824    0.824\n  permintaan ~~                                                         \n    industri          0.365    0.043    8.440    0.000    0.729    0.729\n    strategi          0.391    0.045    8.711    0.000    0.746    0.746\n    regulasi          0.332    0.043    7.796    0.000    0.623    0.623\n  industri ~~                                                           \n    strategi          0.437    0.043   10.268    0.000    0.874    0.874\n    regulasi          0.415    0.043    9.757    0.000    0.816    0.816\n  strategi ~~                                                           \n    regulasi          0.405    0.042    9.579    0.000    0.762    0.762\n\nVariances:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)   Std.lv  Std.all\n   .A1                0.353    0.032   11.133    0.000    0.353    0.549\n   .A2                0.182    0.020    9.132    0.000    0.182    0.270\n   .A3                0.192    0.022    8.905    0.000    0.192    0.253\n   .A4                0.190    0.021    9.171    0.000    0.190    0.268\n   .B1                0.270    0.032    8.454    0.000    0.270    0.339\n   .B2                0.078    0.025    3.155    0.002    0.078    0.125\n   .C1                0.123    0.014    8.573    0.000    0.123    0.205\n   .C2                0.104    0.014    7.494    0.000    0.104    0.169\n   .D1                0.093    0.011    8.748    0.000    0.093    0.151\n   .D2                0.063    0.008    7.481    0.000    0.063    0.114\n   .D3                0.182    0.017   10.624    0.000    0.182    0.270\n   .D4                0.200    0.018   11.218    0.000    0.200    0.365\n   .E1                0.145    0.014   10.565    0.000    0.145    0.211\n   .E2                0.114    0.011   10.392    0.000    0.114    0.195\n   .E3                0.157    0.014   10.844    0.000    0.157    0.242\n   .E4                0.092    0.010    9.490    0.000    0.092    0.141\n   .E5                0.132    0.013   10.456    0.000    0.132    0.201\n   .E6                0.197    0.018   11.222    0.000    0.197    0.304\n   .F1                0.140    0.014    9.700    0.000    0.140    0.190\n   .F2                0.090    0.011    8.219    0.000    0.090    0.130\n   .F3                0.140    0.015    9.538    0.000    0.140    0.181\n   .F4                0.233    0.021   10.912    0.000    0.233    0.306\n    faktor            0.290    0.046    6.330    0.000    1.000    1.000\n    permintaan        0.525    0.065    8.046    0.000    1.000    1.000\n    industri          0.478    0.049    9.734    0.000    1.000    1.000\n    strategi          0.522    0.050   10.406    0.000    1.000    1.000\n    regulasi          0.542    0.055    9.808    0.000    1.000    1.000\n   .kesempatan        0.122    0.015    8.068    0.000    0.206    0.206"
  },
  {
    "objectID": "WorkshopR2025/regresi.html",
    "href": "WorkshopR2025/regresi.html",
    "title": "Latihan Analisis Regresi OLS",
    "section": "",
    "text": "Import Data\n\ndatareg &lt;- read.csv('data/wagedata.csv')\nhead(datareg)\n\n    wage education experience ethnicity area_type    region parttime\n1 498.58        14         15      cauc     urban     south       no\n2 205.76         9         47      cauc     urban     south      yes\n3 490.39        13         14      cauc     urban      west       no\n4 237.42        13          4      cauc     urban      west      yes\n5 759.73        12         44      cauc     urban northeast       no\n6 902.18        15         36      cauc     urban northeast       no\n\n\nDeskripsi Data\nCase study pelatihan analisis regresi OLS dengan RStudio menggunakan data CPS1988 yang dikumpulkan dalam Survei Penduduk (Current Population Survey, CPS) pada bulan Maret 1988 oleh Biro Sensus AS dan dianalisis oleh Bierens dan Ginther (2001).\nData ini merupakan data cross-section dari pria berusia 18 hingga 70 tahun dengan pendapatan tahunan positif lebih dari US$ 50 pada tahun 1992, yang bekerja untuk perusahaan atau organisasi dan menerima gaji atau upah sebagai karyawan.\nSalah satu masalah dengan data CPS adalah bahwa data ini tidak menyediakan pengalaman kerja yang sebenarnya. Oleh karena itu, biasanya pengalaman kerja dihitung sebagai usia - pendidikan - 6 (seperti yang dilakukan oleh Bierens dan Ginther, 2001), yang dapat dianggap sebagai pengalaman potensial. Akibatnya, beberapa responden memiliki pengalaman negatif.\nKeterangan Data\n\n\n\n\n\n\n\n\nVariabel\nJenis\nDeskripsi\n\n\n\n\nwage\nnum\nUpah (dalam dolar per minggu).\n\n\neducation\nint\nJumlah tahun pendidikan.\n\n\nexperience\nint\nJumlah tahun pengalaman kerja potensial.\n\n\nethnicity\nfactor\nSuku. Faktor dengan level “cauc” (Kaukasia) dan “afam” (Afrika-Amerika).\n\n\narea_type\nfactor\nTinggal di area urban (perkotaan) atau rural (pedesaan).\n\n\nregion\nfactor\nWilayah bekerja. Faktor dengan level “northeast” (Timur Laut), “midwest” (Midwest), “south” (Selatan), dan “west” (Barat).\n\n\nparttime\nfactor\nApakah bekerja paruh waktu? (yes/no).\n\n\n\n\nstr(datareg)\n\n'data.frame':   500 obs. of  7 variables:\n $ wage      : num  499 206 490 237 760 ...\n $ education : int  14 9 13 13 12 15 0 16 16 16 ...\n $ experience: int  15 47 14 4 44 36 48 27 10 28 ...\n $ ethnicity : chr  \"cauc\" \"cauc\" \"cauc\" \"cauc\" ...\n $ area_type : chr  \"urban\" \"urban\" \"urban\" \"urban\" ...\n $ region    : chr  \"south\" \"south\" \"west\" \"west\" ...\n $ parttime  : chr  \"no\" \"yes\" \"no\" \"yes\" ...\n\n\n\ndatareg$ethnicity &lt;- as.factor(datareg$ethnicity)\ndatareg$area_type &lt;- as.factor(datareg$area_type)\ndatareg$region &lt;- as.factor(datareg$region)\ndatareg$parttime &lt;- as.factor(datareg$parttime)\nstr(datareg)\n\n'data.frame':   500 obs. of  7 variables:\n $ wage      : num  499 206 490 237 760 ...\n $ education : int  14 9 13 13 12 15 0 16 16 16 ...\n $ experience: int  15 47 14 4 44 36 48 27 10 28 ...\n $ ethnicity : Factor w/ 2 levels \"afam\",\"cauc\": 2 2 2 2 2 2 2 2 2 2 ...\n $ area_type : Factor w/ 2 levels \"rural\",\"urban\": 2 2 2 2 2 2 2 2 2 2 ...\n $ region    : Factor w/ 4 levels \"midwest\",\"northeast\",..: 3 3 4 4 2 2 4 2 1 2 ...\n $ parttime  : Factor w/ 2 levels \"no\",\"yes\": 1 2 1 2 1 1 1 1 1 1 ...\n\n\n\nsummary(datareg)\n\n      wage           education       experience    ethnicity  area_type  \n Min.   :  54.87   Min.   : 0.00   Min.   :-2.00   afam: 43   rural:106  \n 1st Qu.: 308.64   1st Qu.:12.00   1st Qu.: 8.00   cauc:457   urban:394  \n Median : 521.79   Median :12.00   Median :15.00                         \n Mean   : 604.14   Mean   :13.03   Mean   :18.42                         \n 3rd Qu.: 779.28   3rd Qu.:16.00   3rd Qu.:27.00                         \n Max.   :2374.15   Max.   :18.00   Max.   :57.00                         \n       region    parttime \n midwest  :120   no :452  \n northeast:101   yes: 48  \n south    :165            \n west     :114            \n                          \n                          \n\n\nDistribusi data untuk peubah numerik\n\nhist(datareg$wage)\n\n\n\n\n\n\n\nhist(datareg$education)\n\n\n\n\n\n\n\nhist(datareg$experience)\n\n\n\n\n\n\n\n\nBarplot untuk peubah kategori\n\nbarplot(table(datareg$ethnicity))\n\n\n\n\n\n\n\nbarplot(table(datareg$area_type))\n\n\n\n\n\n\n\nbarplot(table(datareg$region))\n\n\n\n\n\n\n\nbarplot(table(datareg$parttime))\n\n\n\n\n\n\n\n\nAnalisis Korelasi\n\nkordata &lt;- cor(datareg[,1:3])\nround(kordata, 2)\n\n           wage education experience\nwage       1.00      0.34       0.13\neducation  0.34      1.00      -0.33\nexperience 0.13     -0.33       1.00\n\n\nVisualisasi Korelasi install.packages('corrplot')\n\nlibrary(corrplot)\ncorrplot(kordata, type=\"lower\")"
  },
  {
    "objectID": "WorkshopR2025/regresi.html#eksplorasi-data",
    "href": "WorkshopR2025/regresi.html#eksplorasi-data",
    "title": "Latihan Analisis Regresi OLS",
    "section": "",
    "text": "Import Data\n\ndatareg &lt;- read.csv('data/wagedata.csv')\nhead(datareg)\n\n    wage education experience ethnicity area_type    region parttime\n1 498.58        14         15      cauc     urban     south       no\n2 205.76         9         47      cauc     urban     south      yes\n3 490.39        13         14      cauc     urban      west       no\n4 237.42        13          4      cauc     urban      west      yes\n5 759.73        12         44      cauc     urban northeast       no\n6 902.18        15         36      cauc     urban northeast       no\n\n\nDeskripsi Data\nCase study pelatihan analisis regresi OLS dengan RStudio menggunakan data CPS1988 yang dikumpulkan dalam Survei Penduduk (Current Population Survey, CPS) pada bulan Maret 1988 oleh Biro Sensus AS dan dianalisis oleh Bierens dan Ginther (2001).\nData ini merupakan data cross-section dari pria berusia 18 hingga 70 tahun dengan pendapatan tahunan positif lebih dari US$ 50 pada tahun 1992, yang bekerja untuk perusahaan atau organisasi dan menerima gaji atau upah sebagai karyawan.\nSalah satu masalah dengan data CPS adalah bahwa data ini tidak menyediakan pengalaman kerja yang sebenarnya. Oleh karena itu, biasanya pengalaman kerja dihitung sebagai usia - pendidikan - 6 (seperti yang dilakukan oleh Bierens dan Ginther, 2001), yang dapat dianggap sebagai pengalaman potensial. Akibatnya, beberapa responden memiliki pengalaman negatif.\nKeterangan Data\n\n\n\n\n\n\n\n\nVariabel\nJenis\nDeskripsi\n\n\n\n\nwage\nnum\nUpah (dalam dolar per minggu).\n\n\neducation\nint\nJumlah tahun pendidikan.\n\n\nexperience\nint\nJumlah tahun pengalaman kerja potensial.\n\n\nethnicity\nfactor\nSuku. Faktor dengan level “cauc” (Kaukasia) dan “afam” (Afrika-Amerika).\n\n\narea_type\nfactor\nTinggal di area urban (perkotaan) atau rural (pedesaan).\n\n\nregion\nfactor\nWilayah bekerja. Faktor dengan level “northeast” (Timur Laut), “midwest” (Midwest), “south” (Selatan), dan “west” (Barat).\n\n\nparttime\nfactor\nApakah bekerja paruh waktu? (yes/no).\n\n\n\n\nstr(datareg)\n\n'data.frame':   500 obs. of  7 variables:\n $ wage      : num  499 206 490 237 760 ...\n $ education : int  14 9 13 13 12 15 0 16 16 16 ...\n $ experience: int  15 47 14 4 44 36 48 27 10 28 ...\n $ ethnicity : chr  \"cauc\" \"cauc\" \"cauc\" \"cauc\" ...\n $ area_type : chr  \"urban\" \"urban\" \"urban\" \"urban\" ...\n $ region    : chr  \"south\" \"south\" \"west\" \"west\" ...\n $ parttime  : chr  \"no\" \"yes\" \"no\" \"yes\" ...\n\n\n\ndatareg$ethnicity &lt;- as.factor(datareg$ethnicity)\ndatareg$area_type &lt;- as.factor(datareg$area_type)\ndatareg$region &lt;- as.factor(datareg$region)\ndatareg$parttime &lt;- as.factor(datareg$parttime)\nstr(datareg)\n\n'data.frame':   500 obs. of  7 variables:\n $ wage      : num  499 206 490 237 760 ...\n $ education : int  14 9 13 13 12 15 0 16 16 16 ...\n $ experience: int  15 47 14 4 44 36 48 27 10 28 ...\n $ ethnicity : Factor w/ 2 levels \"afam\",\"cauc\": 2 2 2 2 2 2 2 2 2 2 ...\n $ area_type : Factor w/ 2 levels \"rural\",\"urban\": 2 2 2 2 2 2 2 2 2 2 ...\n $ region    : Factor w/ 4 levels \"midwest\",\"northeast\",..: 3 3 4 4 2 2 4 2 1 2 ...\n $ parttime  : Factor w/ 2 levels \"no\",\"yes\": 1 2 1 2 1 1 1 1 1 1 ...\n\n\n\nsummary(datareg)\n\n      wage           education       experience    ethnicity  area_type  \n Min.   :  54.87   Min.   : 0.00   Min.   :-2.00   afam: 43   rural:106  \n 1st Qu.: 308.64   1st Qu.:12.00   1st Qu.: 8.00   cauc:457   urban:394  \n Median : 521.79   Median :12.00   Median :15.00                         \n Mean   : 604.14   Mean   :13.03   Mean   :18.42                         \n 3rd Qu.: 779.28   3rd Qu.:16.00   3rd Qu.:27.00                         \n Max.   :2374.15   Max.   :18.00   Max.   :57.00                         \n       region    parttime \n midwest  :120   no :452  \n northeast:101   yes: 48  \n south    :165            \n west     :114            \n                          \n                          \n\n\nDistribusi data untuk peubah numerik\n\nhist(datareg$wage)\n\n\n\n\n\n\n\nhist(datareg$education)\n\n\n\n\n\n\n\nhist(datareg$experience)\n\n\n\n\n\n\n\n\nBarplot untuk peubah kategori\n\nbarplot(table(datareg$ethnicity))\n\n\n\n\n\n\n\nbarplot(table(datareg$area_type))\n\n\n\n\n\n\n\nbarplot(table(datareg$region))\n\n\n\n\n\n\n\nbarplot(table(datareg$parttime))\n\n\n\n\n\n\n\n\nAnalisis Korelasi\n\nkordata &lt;- cor(datareg[,1:3])\nround(kordata, 2)\n\n           wage education experience\nwage       1.00      0.34       0.13\neducation  0.34      1.00      -0.33\nexperience 0.13     -0.33       1.00\n\n\nVisualisasi Korelasi install.packages('corrplot')\n\nlibrary(corrplot)\ncorrplot(kordata, type=\"lower\")"
  },
  {
    "objectID": "WorkshopR2025/regresi.html#regresi-ols",
    "href": "WorkshopR2025/regresi.html#regresi-ols",
    "title": "Latihan Analisis Regresi OLS",
    "section": "Regresi OLS",
    "text": "Regresi OLS\n\\[ wage_i = \\beta_0 + \\beta*experiece_i + \\epsilon_i \\] Regresi linier sederhana\n\nmodel1 &lt;- wage ~ experience\nreg1 &lt;- lm(model1, data = datareg)\n\n\nsummary(reg1)\n\n\nCall:\nlm(formula = model1, data = datareg)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-667.8 -275.5  -79.1  165.0 1812.1 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  529.670     31.260  16.944   &lt;2e-16 ***\nexperience     4.044      1.382   2.925   0.0036 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 405.5 on 498 degrees of freedom\nMultiple R-squared:  0.01689,   Adjusted R-squared:  0.01491 \nF-statistic: 8.555 on 1 and 498 DF,  p-value: 0.003603\n\n\n\\[ log(wage_i) = \\beta_0 + \\beta*experiece_i + \\epsilon_i \\] Regresi linier sederhana dnegan transformasi log\n\nmodel2 &lt;- log(wage) ~ experience\nreg2 &lt;- lm(model2, data = datareg)\nsummary(reg2)\n\n\nCall:\nlm(formula = model2, data = datareg)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.11088 -0.39666  0.07784  0.45918  1.67853 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 6.023923   0.052768 114.159   &lt;2e-16 ***\nexperience  0.008743   0.002334   3.746    2e-04 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.6845 on 498 degrees of freedom\nMultiple R-squared:  0.02741,   Adjusted R-squared:  0.02546 \nF-statistic: 14.03 on 1 and 498 DF,  p-value: 0.0002005\n\n\n\nRegresi linier berganda\n\nmodel3 &lt;- log(wage) ~ experience + area_type\nreg3 &lt;- lm(model3, data = datareg)\nsummary(reg3)\n\n\nCall:\nlm(formula = model3, data = datareg)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.18294 -0.41471  0.08782  0.44539  1.90790 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)    5.792031   0.079222  73.111  &lt; 2e-16 ***\nexperience     0.009058   0.002303   3.934 9.56e-05 ***\narea_typeurban 0.286898   0.073904   3.882 0.000118 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.675 on 497 degrees of freedom\nMultiple R-squared:  0.05603,   Adjusted R-squared:  0.05223 \nF-statistic: 14.75 on 2 and 497 DF,  p-value: 5.981e-07\n\n\nUbah baseline kategori\n\ndatareg$area_type &lt;- relevel(datareg$area_type, ref = \"urban\")\n\nmodel3 &lt;- log(wage) ~ experience + area_type\nreg3 &lt;- lm(model3, data = datareg)\nsummary(reg3)\n\n\nCall:\nlm(formula = model3, data = datareg)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.18294 -0.41471  0.08782  0.44539  1.90790 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)     6.078929   0.053932 112.714  &lt; 2e-16 ***\nexperience      0.009058   0.002303   3.934 9.56e-05 ***\narea_typerural -0.286898   0.073904  -3.882 0.000118 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.675 on 497 degrees of freedom\nMultiple R-squared:  0.05603,   Adjusted R-squared:  0.05223 \nF-statistic: 14.75 on 2 and 497 DF,  p-value: 5.981e-07"
  },
  {
    "objectID": "WorkshopR2025/regresi.html#pengujian-asumsi-residual",
    "href": "WorkshopR2025/regresi.html#pengujian-asumsi-residual",
    "title": "Latihan Analisis Regresi OLS",
    "section": "Pengujian Asumsi Residual",
    "text": "Pengujian Asumsi Residual\nQQPLOT\n\nqqnorm(reg3$residuals)\nqqline(reg3$residuals)\n\n\n\n\n\n\n\n\n\nshapiro.test(reg3$residuals)\n\n\n    Shapiro-Wilk normality test\n\ndata:  reg3$residuals\nW = 0.98734, p-value = 0.0002485\n\n\nInstall Package: install.packages(\"lmtest\")\n\nlibrary(lmtest)\n\nUji Heteroskedastisitas\n\nbptest(reg3) \n\n\n    studentized Breusch-Pagan test\n\ndata:  reg3\nBP = 0.12002, df = 2, p-value = 0.9418\n\n\nUji Multikolinieritas\nInstall Package: install.packages(\"car\")\n\nlibrary(car)\n\n\nvif(reg3)\n\nexperience  area_type \n  1.001249   1.001249 \n\n\nUji Autokorelasi\n\ndwtest(reg3)\n\n\n    Durbin-Watson test\n\ndata:  reg3\nDW = 1.9226, p-value = 0.1925\nalternative hypothesis: true autocorrelation is greater than 0"
  },
  {
    "objectID": "WorkshopR2025/regresi.html#tambahan",
    "href": "WorkshopR2025/regresi.html#tambahan",
    "title": "Latihan Analisis Regresi OLS",
    "section": "Tambahan",
    "text": "Tambahan\nVisualisasi data\n\n# Boxplot\nboxplot(wage ~ area_type, data = datareg, \n        main = \"Upah Berdasarkan Tipe Area\", \n        xlab = \"Tipe Area\", \n        ylab = \"Dolar per Minggu\", \n        col = \"orange\")\n\n\n\n\n\n\n\n\n\n# Scatterplot\nplot(datareg$experience, datareg$wage, \n     main = \"Upah Berdasarkan Pengalaman Kerja\", \n     xlab = \"Pengalaman Kerja\", \n     ylab = \"Log Dolar per Minggu\", \n     col = \"blue\")\n\n\n\n\n\n\n\nline\n\nfunction (x, y = NULL, iter = 1) \n{\n    xy &lt;- xy.coords(x, y, setLab = FALSE)\n    ok &lt;- complete.cases(xy$x, xy$y)\n    Call &lt;- sys.call()\n    structure(.Call(C_tukeyline, as.double(xy$x[ok]), as.double(xy$y[ok]), \n        as.integer(iter), Call), class = \"tukeyline\")\n}\n&lt;bytecode: 0x0000016445f099a0&gt;\n&lt;environment: namespace:stats&gt;\n\n\n\n# Scatterplot\nplot(datareg$experience, log(datareg$wage), \n     main = \"Upah Berdasarkan Pengalaman Kerja\", \n     xlab = \"Pengalaman Kerja\", \n     ylab = \"Log Dolar per Minggu\", \n     col = \"blue\")\n\n\n\n\n\n\n\nline\n\nfunction (x, y = NULL, iter = 1) \n{\n    xy &lt;- xy.coords(x, y, setLab = FALSE)\n    ok &lt;- complete.cases(xy$x, xy$y)\n    Call &lt;- sys.call()\n    structure(.Call(C_tukeyline, as.double(xy$x[ok]), as.double(xy$y[ok]), \n        as.integer(iter), Call), class = \"tukeyline\")\n}\n&lt;bytecode: 0x0000016445f099a0&gt;\n&lt;environment: namespace:stats&gt;\n\n\n\n# Plot log(wage) terhadap experience\nplot(log(datareg$wage) ~ datareg$experience,\n     main = \"Hubungan Upah dan Pengalaman Kerja\",\n     ylab = \"Dolar per Minggu (Log)\",\n     xlab = \"Pengalaman Kerja\",\n     pch = 20)\n\n# Garis regresi pertama\nabline(a = 5, b = 0.01, col = \"blue\", lty = 2) # lt = 2: garis putus-putus\n\n# Garis regresi kedua dengan fungsi lm() atau OLS\nabline(lm(log(wage) ~ experience, data = datareg), col = \"red\")\n\n# Tambahkan label untuk kedua garis\nlegend(\"bottomright\",\n       legend = c(\"Garis Regresi: a = 5, b = 0.1\", \n                  \"Garis Regresi: OLS\"),\n       col = c(\"blue\", \"red\"), # Warna garis\n       lty = c(2, 1), # Jenis garis\n       bty = \"n\") # Tidak ada kotak di sekitar legend"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "RStudio Workshop 2025",
    "section": "",
    "text": "Situs ini berfungsi sebagai repositori untuk slide dan kode (sintaks) untuk peserta workshop RStudio, di Universitas Jambi, 6 Mei 2025.\nSpeaker: Prof. Dr. Muhammad Firdaus (Pengurus Pusat ISEI Bidang V & Atdikbud KBRI Kuala Lumpur)\nInstructor: Deri Siswara (IPB University)"
  },
  {
    "objectID": "index.html#peningkatan-research-quality-dengan-rstudio",
    "href": "index.html#peningkatan-research-quality-dengan-rstudio",
    "title": "RStudio Workshop 2025",
    "section": "",
    "text": "Situs ini berfungsi sebagai repositori untuk slide dan kode (sintaks) untuk peserta workshop RStudio, di Universitas Jambi, 6 Mei 2025.\nSpeaker: Prof. Dr. Muhammad Firdaus (Pengurus Pusat ISEI Bidang V & Atdikbud KBRI Kuala Lumpur)\nInstructor: Deri Siswara (IPB University)"
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "RStudio Workshop 2025",
    "section": "Schedule",
    "text": "Schedule\nSlide dan sintaks akan tersedia secara bertahap di bawah ini.\n\n\n\n\nSession\nMaterial\n\n\n\n\nSesi 0\nDasar-Dasar R 📂 Slides\n\n\nSesi 1\nMenulis Artikel Jurnal\n\n\nSesi 2\nEkonometrika di RStudio: Korelasi dan Regresi OLS\n\n\nSesi 3\nMetode Kuantitatif di RStudio: SEM\n\n\n\n\n\n\n\n\n\n\n\nImportant - Jangan lupa membawa laptop Anda!\nDi workshop ini, bawa laptop yang sudah terinstal RStudio. Pastikan Anda sudah menginstal R dan RStudio di laptop Anda sebelum workshop dimulai. Cara menginstal R dan RStudio dapat ditemukan di Pre-workshop activities"
  },
  {
    "objectID": "index.html#pre-workshop-activities",
    "href": "index.html#pre-workshop-activities",
    "title": "RStudio Workshop 2025",
    "section": "Pre-workshop activities",
    "text": "Pre-workshop activities\nWorkshop ini akan menggunakan RStudio, sebuah lingkungan pengembangan terintegrasi (IDE) gratis dan open-source untuk R.\nSilakan instal hal-hal berikut di laptop Anda sebelum workshop dimulai:\n\nUnduh dan instal versi terbaru dari R sesuai dengan sistem operasi Anda.\nUnduh dan instal RStudio, IDE untuk R.\nBuka Quarto Document di RStudio dan instal package rmarkdown. Lebih lengkapnya dapat dilihat pada video tutorial berikut:"
  },
  {
    "objectID": "index.html#datasets",
    "href": "index.html#datasets",
    "title": "RStudio Workshop 2025",
    "section": "Datasets",
    "text": "Datasets\n\nDataset 1: Regresi OLS\nUntuk sesi 2 workshop ini, kita akan menggunakan dataset yang disimpan dalam file CSV bernama wagedata.csv.\n Klik di sini mengunduh data\n\n\nDataset 2: SEM (Structural Equation Modeling)\nUntuk sesi 3 workshop ini, kita akan menggunakan dataset yang yang bernama datasem.xlsx\n Klik di sini mengunduh data untuk SEM"
  },
  {
    "objectID": "for-tas/01-basics-notes.html",
    "href": "for-tas/01-basics-notes.html",
    "title": "Introduction to Python",
    "section": "",
    "text": "print(\"Hello World!\")\n5 + 5 \nPython has a built-in function called print that prints things as text.\nCall the function (i.e., tell Python to run it) by using its name.\nprint(10 - 5)\nprint(10 * 2)\nprint(\"hello world\")\nUse comments to add a layer of documentation to your code. E.g., explain what a block of code does, etc."
  },
  {
    "objectID": "for-tas/01-basics-notes.html#section-1-getting-started",
    "href": "for-tas/01-basics-notes.html#section-1-getting-started",
    "title": "Introduction to Python",
    "section": "",
    "text": "print(\"Hello World!\")\n5 + 5 \nPython has a built-in function called print that prints things as text.\nCall the function (i.e., tell Python to run it) by using its name.\nprint(10 - 5)\nprint(10 * 2)\nprint(\"hello world\")\nUse comments to add a layer of documentation to your code. E.g., explain what a block of code does, etc."
  },
  {
    "objectID": "for-tas/01-basics-notes.html#section-2-variables-and-assignment",
    "href": "for-tas/01-basics-notes.html#section-2-variables-and-assignment",
    "title": "Introduction to Python",
    "section": "Section 2: Variables and Assignment",
    "text": "Section 2: Variables and Assignment\n\nHow can I store data and perform simple calculations?\nVariables are names for values. # In Python, the = symbol assigns the value on the right to the variable on the left. # Once you declare a variable, you must assign value to it\ngreetings = \"Hello World!\"\nage = 25\nname  # This cell will give you an error because you tried to declare a variable without assigning a value to it. \nVariable names: don’t start with a digit, alphanumeric only with underscore, case sensitive, should be meaningful\nYou can also use print() to print out a variable’s value\nPut the variable name inside the bracket.\nThe things we passed to the function (the things inside the brackets) are called ‘arguments’ (more on this later)\nprint(greetings)\nprint(\"today's greetings:\", greetings)\nVariables must be created before they are used.\nIf a variable doesn’t exist yet, or if the name has been mis-spelled, Python reports an error.\nVariables can be used in calculations! We can use variables in calculations just as if they were values.\nage = age + 10\nprint(\"Age in ten years from now:\", age)\nYou can also assign a variable value to another variable\ncontinent = \"Asia\"\nposition = continent  # assign \"sign\" value to direction\nprint(position, continent)  # now both direction and sign has the same value!"
  },
  {
    "objectID": "for-tas/01-basics-notes.html#section-3-data-types-and-conversion",
    "href": "for-tas/01-basics-notes.html#section-3-data-types-and-conversion",
    "title": "Introduction to Python",
    "section": "Section 3: Data Types and Conversion",
    "text": "Section 3: Data Types and Conversion\ncountry = \"Singapore\"  # string\npublic_holidays = 11  # integer\navg_temp = 27.8  # float\npart_of_asean = True  # Boolean\nUse the built-in function type to find out what type a value or a variable has.\nRemember, when you change the value of a variable to a new data type,\nthe results of print(type(your_variable)) will change accordingly.\nQuestion: What is the type of part_of_asean?\nprint(type(part_of_asean))  # this should print out Boolean\nWhat would happen if we do this?\npart_of_asean = \"True\"\nprint(type(part_of_asean))  # now this should be a string!\nWhy care about data type?\nBecause a value’s data type determines what the program can do to it.\nThe calculations below work on int data type\nprint(public_holidays - 5)  \nBut this won’t work on a string\nprint(country - \"pore\") \nHowever you can use “+” and “*” on strings\nprint(country + \" best\")  # this works for string, though.\nprint(country * 4)  # this also works\nprint(\"=\" * 10)  # this also works\nprint(len(country))  # this would print out the number of characters a string has\nlen(public_holidays) \\# this should give you an error\nSome data types need to be converted before we can do some operations on them i.e. this will give you an error.\nprint(\"10\" + 2) \nprint(\"10\" + str(2))  # either we convert them all to string\nprint(int(10) + 2)  # or we convert them to int\nTake note of the execution order of your variables! They only change value when something is assigned to them.\npublic_holiday = 11  # initial value \nnew_holidays = public_holiday + 5\npublic_holiday = 10  # we update the variable\nprint(public_holiday, new_holidays)"
  },
  {
    "objectID": "for-tas/01-basics-notes.html#section-4-built-in-functions-help-and-error-messages",
    "href": "for-tas/01-basics-notes.html#section-4-built-in-functions-help-and-error-messages",
    "title": "Introduction to Python",
    "section": "Section 4: Built-in functions, Help, and Error Messages",
    "text": "Section 4: Built-in functions, Help, and Error Messages\n\nExplain how to pull the help function\nSome tips on error messages\nRefer to slides for full content"
  },
  {
    "objectID": "for-tas/01-basics-notes.html#section-5-list",
    "href": "for-tas/01-basics-notes.html#section-5-list",
    "title": "Introduction to Python",
    "section": "Section 5: List",
    "text": "Section 5: List\nquarterly_gdp_growth = [-2,-5.8, 2.8, 2.6, 7.3, 7.8]  # growth rates from 2023 Q1 to 2024 Q2\nprint('GDP growth rates:', quarterly_gdp_growth)\nprint('Number of quarters:', len(quarterly_gdp_growth))\nUse square bracket and index number to retrieve an item from the list.\nRemember that index starts from 0 instead of 1.\nSo if you want to retrieve the fourth item (2021’s growth rate), the index will be 3.\nprint('GDP growth rate in 2023 Q1:', quarterly_gdp_growth[0])\nprint('GDP growth rate in 2024 Q2:', quarterly_gdp_growth[5])\nList values can be replaced by simply assigning a new value to them.\nUpdate the growth rate for 2023 Q3 (index 2) with the correct figure.\nquarterly_gdp_growth[2] = -2.8\nprint('Updated GDP growth rates:', quarterly_gdp_growth)\nWhat happens if we try to retrieve an index that doesn’t exist?\nquarterly_gdp_growth[10] # This would cause an IndexError\nYou can append to the list (e.g., if we get data for 2024 Q3)\nprint('GDP growth rates initially:', quarterly_gdp_growth)\nquarterly_gdp_growth.append(3.2)  # Adding hypothetical  data\nprint('GDP growth rates after adding 2024 Q3 prediction:', quarterly_gdp_growth)\nadding item at the start e.g. 2022 Q4 was 9.4\nprint('GDP growth rates initially:', quarterly_gdp_growth)\nquarterly_gdp_growth.insert(0, 9.4) \nprint('GDP growth rates after adding 2022 Q4:', quarterly_gdp_growth)\nremove the two items we added\nprint('GDP growth rates initially:', quarterly_gdp_growth)\ndel quarterly_gdp_growth[0]  \nquarterly_gdp_growth.pop()\nprint('GDP growth rates after removing projection:', quarterly_gdp_growth)\nslicing list\nprint('Quarterly GDP growth rates in 2023:', quarterly_gdp_growth[0:4])  # Remember, the end index is exclusive\nprint('Most recent growth rate:', quarterly_gdp_growth[-1])  # Get the last item in the list\nprint('Growth rates for even quarters:', quarterly_gdp_growth[::2])  # Every other item\n# remember: list[start:end:stride]\nYou can also initialize an empty list to fill later\nfuture_growth_rates = []\nPrint the average quarterly GDP growth rate\ntotal_growth = sum(quarterly_gdp_growth)\naverage_growth = total_growth / len(quarterly_gdp_growth)\nprint(f\"Average quarterly GDP growth: {average_growth:.2f}%\")\nYou can include values of different types in a list, though for GDP data we’ll stick to numbers\nmixed_data = [\"2024 growth\", 3.0, \"2023 growth\", 2.7]\nprint(mixed_data)\n\nLearning Check #3\nWrite a code to print the growth rate for 2023 Q4 (remember, it’s the 5th item but index 4)\nprint(quarterly_gdp_growth[4])\nWrite a code to print the growth rates for the first three quarters of 2023\nprint(quarterly_gdp_growth[0:3])\nAdd a projected growth rate of 3.3 and 3.6 for 2024 Q3 and Q4 respectively at the end of the list\nquarterly_gdp_growth.insert(len(quarterly_gdp_growth), 3.3)\nquarterly_gdp_growth.insert(len(quarterly_gdp_growth), 3.6)\nprint(quarterly_gdp_growth)"
  },
  {
    "objectID": "for-tas/01-basics-notes.html#section-6-for-loops",
    "href": "for-tas/01-basics-notes.html#section-6-for-loops",
    "title": "Introduction to Python",
    "section": "Section 6: For Loops",
    "text": "Section 6: For Loops\nBasic loop example\nfor number in range(1, 7):  # 1 to 6, representing 6 quarters\n    print(\"Quarter\", number)\nYou can also use list in a for loop!\nA for loop executes commands once for each value in a list/collection.\nIt is basically telling python: “for each item in this list/collection, do these operations”\nfor growth in quarterly_gdp_growth:\n    print(f\"Quarterly GDP growth: {growth}%\")\nLet’s create a more informative output by combining the quarter information with the growth rate\nquarters = [\"2023 Q1\", \"2023 Q2\", \"2023 Q3\", \"2023 Q4\", \"2024 Q1\", \"2024 Q2\", \"2024 Q3 prediction\", \"2024 Q4 prediction\"]\nlen(quarterly_gdp_growth)\nfor i in range(len(quarterly_gdp_growth)-1):\n    print(f\"{quarters[i]}: {quarterly_gdp_growth[i]}% GDP growth\")\nPrint out only the quarters with GDP growth rate above 1%\nprint(quarterly_gdp_growth)\nfor i, growth in enumerate(quarterly_gdp_growth):\n    if growth &gt; 1:\n        print(i, growth)\n        print(f\"{quarters[i]} had positive growth: {growth}%\")"
  },
  {
    "objectID": "for-tas/01-basics-notes.html#section-7-conditionals-if-else",
    "href": "for-tas/01-basics-notes.html#section-7-conditionals-if-else",
    "title": "Introduction to Python",
    "section": "Section 7: Conditionals (If-Else)",
    "text": "Section 7: Conditionals (If-Else)\nLet’s categorize our GDP growth rates\nlatest_growth = quarterly_gdp_growth[-1]  # Get the most recent growth rate\nif latest_growth &gt; 1:\n    print(f\"The latest GDP growth of {latest_growth}% indicates strong economic expansion.\")\nelif latest_growth &gt; 0:\n    print(f\"The latest GDP growth of {latest_growth}% shows moderate economic growth.\")\nelse:\n    print(f\"The latest GDP growth of {latest_growth}% suggests economic contraction.\")\nConditionals are often used inside loops.\nLet’s categorize all our quarterly growth rates.\nfor i, growth in enumerate(quarterly_gdp_growth):\n    if growth &gt; 1:\n        print(f\"{quarters[i]}: Strong growth at {growth}%\")\n    elif growth &gt; 0.5:\n        print(f\"{quarters[i]}: Moderate growth at {growth}%\")\n    else:\n        print(f\"{quarters[i]}: Slow growth at {growth}%\")\nYou can add a catch-all statement, else in conditionals.\nThe code inside this catch-all will be executed if none of the conditions are satisfied.\nLet’s check if we’ve had any quarters with negative growth\nfor i, growth in enumerate(quarterly_gdp_growth):\n    if growth &lt; 0:\n        print(f\"{quarters[i]} showed economic contraction with {growth}% growth.\")\n        break  # Exit the loop if we find a negative growth quarter\n    else:\n        print(\"No quarters showed economic contraction in this period.\")\nWhat if you have more than one condition?\nUse elif (short for “else if”) to specify additional tests.\nelif must be placed between if and `else\nLet’s categorize growth rates more precisely\nfor i, growth in enumerate(quarterly_gdp_growth):\n    if growth &gt; 10:\n        print(f\"{quarters[i]}: Very strong growth at {growth}%\")\n    elif growth &gt; 5:\n        print(f\"{quarters[i]}: Strong growth at {growth}%\")\n    elif growth &gt; 2:\n        print(f\"{quarters[i]}: Moderate growth at {growth}%\")\n    elif growth &gt; 0:\n        print(f\"{quarters[i]}: Slow growth at {growth}%\")\n    else:\n        print(f\"{quarters[i]}: Economic contraction at {growth}%\")\nIMPORTANT\nPython steps through the statements of the conditional in order,\ntesting each in turn. So ordering matters!\nLet’s see an example of why order matters:\nfor growth in quarterly_gdp_growth:\n    if growth &gt; 0:\n        print(f\"{growth}% is moderate growth\")\n    elif growth &gt; 5:  # This will never be reached for growth &gt; 1\n        print(f\"{growth}% is strong growth\")\n    else:\n        print(f\"{growth}% is negative growth\")\nThe correct order would be:\nfor growth in quarterly_gdp_growth:\n    if growth &gt; 5:\n        print(f\"{growth}% is strong growth\")\n    elif growth &gt; 0:\n        print(f\"{growth}% is moderate growth\")\n    else:\n        print(f\"{growth}% is negative growth\")\n\nLearning check #4: Analyze GDP growth trends\nWrite a script that identifies the highest and lowest growth quarters\nhighest_growth = max(quarterly_gdp_growth)\nlowest_growth = min(quarterly_gdp_growth)\n\nhighest_quarter = quarters[quarterly_gdp_growth.index(highest_growth)]\nlowest_quarter = quarters[quarterly_gdp_growth.index(lowest_growth)]\n\nprint(f\"Highest growth: {highest_growth}% in {highest_quarter}\")\nprint(f\"Lowest growth: {lowest_growth}% in {lowest_quarter}\")"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "404",
    "section": "",
    "text": "Slide dan syntax akan tersedia secara bertahap."
  },
  {
    "objectID": "coc.html",
    "href": "coc.html",
    "title": "Code of conduct",
    "section": "",
    "text": "In order to foster a positive and professional learning environment we encourage the following kinds of behaviours:\n\nUse welcoming and inclusive language\nBe respectful of different viewpoints and experiences\nGracefully accept constructive criticism\nFocus on what is best for the community\nShow courtesy and respect towards other community members\n\n(Adapted from The Carpentries’ Code of Conduct)"
  },
  {
    "objectID": "for-tas/02-numpy-notes.html",
    "href": "for-tas/02-numpy-notes.html",
    "title": "Introduction to Numpy & Matplotlib",
    "section": "",
    "text": "Create .ipynb in VS Code\nDifference between markdown cells and code cells\nMarkdown (very briefly)"
  },
  {
    "objectID": "for-tas/02-numpy-notes.html#section-1-jupyter-notebook",
    "href": "for-tas/02-numpy-notes.html#section-1-jupyter-notebook",
    "title": "Introduction to Numpy & Matplotlib",
    "section": "",
    "text": "Create .ipynb in VS Code\nDifference between markdown cells and code cells\nMarkdown (very briefly)"
  },
  {
    "objectID": "for-tas/02-numpy-notes.html#section-2-numpy-arrays",
    "href": "for-tas/02-numpy-notes.html#section-2-numpy-arrays",
    "title": "Introduction to Numpy & Matplotlib",
    "section": "Section 2: Numpy arrays",
    "text": "Section 2: Numpy arrays\nInstalling Numpy (can run in the code cells)\npip install numpy\nImporting numpy\nimport numpy as np\nNumpy creation and operations\nnp.arange creates evenly spaced values within a given interval:\nrange_array = np.arange(0, 10, 0.5)\nprint(\"Range array:\", range_array)\nFrom list to array:\nlist_array = np.array([1, 2, 3, 4, 5])\nprint(\"NumPy array:\", list_array)\nIndexing and slicing\nprint(\"Original array:\", range_array)\nprint(\"First element:\", range_array[0])\nprint(\"Last element:\", range_array[-1])\nprint(\"Slicing (elements 3 to 7):\", range_array[2:7])\nrange_array[0] = 99\nprint(\"Update value of first element:\", range_array[0])\nCopies vs Views\n\nChanges in original will be reflected in view and vice versa\nChanges in original will NOT be reflected in copy\n\n# original array\noriginal = np.array([1, 2, 3, 4, 5])\nprint(\"Original array:\", original)\n\n# view of the original array\nview = original.view()\nprint(\"View:\", view)\n\n# copy of the original array\ncopy = original.copy()\nprint(\"Copy:\", copy)\n\n# Modify the original array\noriginal[0] = 99\nprint(\"\\nAfter modifying the original array:\")\nprint(\"Original array:\", original)\nprint(\"View now:\", view)  # reflects the changes\nprint(\"Copy now:\", copy)  # remains unchanged\n\n# Modify the view\nview[1] = 100\nprint(\"\\nAfter modifying the view:\")\nprint(\"Original array:\", original)  # affected\nprint(\"View now:\", view)\nprint(\"Copy now:\", copy)  # remains unchanged\n\n# Modify the copy\ncopy[2] = 200\nprint(\"\\nAfter modifying the copy:\")\nprint(\"Original array:\", original)  # not affected\nprint(\"View now:\", view)  # not affected\nprint(\"Copy now:\", copy)"
  },
  {
    "objectID": "for-tas/02-numpy-notes.html#section-3-two-dimensional-arrays",
    "href": "for-tas/02-numpy-notes.html#section-3-two-dimensional-arrays",
    "title": "Introduction to Numpy & Matplotlib",
    "section": "Section 3: Two-dimensional arrays",
    "text": "Section 3: Two-dimensional arrays\narray_2d = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\nprint(array_2d)\nprint(\"Shape of the array:\", array_2d.shape)\nprint(\"Size of the array:\", array_2d.size)\nIndices in a 2D array:\narray_2d = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\nprint(array_2d[0,0])\nLoading a CSV file to 2D array.\nIn this CSV, the rows represent 7 different sectors and the columns represent the quarters from 2023 Q4, dating back all the way to 2019 Q1.\nEach cell contains the GDP growth of that sector for that quarter, compared to previous year’s quarters.\ngdp_data = np.loadtxt('data/sg-gdp.csv', delimiter=',', dtype=\"float16\")\nnp.set_printoptions(suppress=True)\n\nprint(\"GDP data\")\nprint(gdp_data)\nprint(\"GDP data shape:\", gdp_data.shape)\n\nFind out the mean, standard deviation, max, and mean values.\n\nprint(\"Mean of GDP data:\", np.mean(gdp_data))\nprint(\"Standard deviation of GDP data:\", np.std(gdp_data))\nprint(\"Maximum value in GDP data:\", np.amax(gdp_data))\nprint(\"Minimum value in GDP data:\", np.amin(gdp_data))\n\nFind the mean for each quarter (column-wise operation)\nFind the mean for each sector (row-wise operation)\n\nprint(\"Mean of each quarter:\", np.mean(gdp_data, axis=0))\nprint(\"Mean of each sector:\", np.mean(gdp_data, axis=1))\n\nTranspose the array\n\ntransposed_gdp = np.transpose(gdp_data)\nprint(\"Transposed GDP data shape:\", transposed_gdp.shape)\n\nRetrieve all the negative values.\n\nnegative_growth = gdp_data &lt; 0  \nprint(\"Sectors with negative growth:\\n\", gdp_data[negative_growth])\n\nCalculate the changes every quarter for Sector 1.\n\nThe gdp_data is longitudinal, with each row representing observations for a specific sector over time. This makes growth and contraction trends meaningful to analyze. To calculate changes in the data using NumPy, we can use the numpy.diff() function, which computes the differences between successive values in an array.\nsector1_array = gdp_data[0, :] # first row, all columns\nprint(\"sector1_array:\", sector1_array)\n\nsector1_changes = np.diff(sector1_array)\nprint(\"\\nsector1_changes:\", sector1_changes)\nprint(\"\\nsector1_changes absolute change:\", np.absolute(sector1_changes))\nNumPy financial functions\nCalculate the future value of $1000 invested for 3 years at a 5.0% average annual rate of return.\nnp.fv(rate=0.05, nper=3, pmt=0, pv=-1000)\nBy convention, the negative sign represents cash flow out (i.e. money not available today).\nExample 2:\nYou have a loan of 10,000 SGD at 9% annual interest. How long would it take to pay-off the load if your monthly payment is at 750?\nnp.round(npf.nper(0.09/12, -750, 10000), 5)\n# divided by 12, because the interest is annual but the payment is monthly"
  },
  {
    "objectID": "for-tas/02-numpy-notes.html#section-4-visualizing-array-contents-matplotlib",
    "href": "for-tas/02-numpy-notes.html#section-4-visualizing-array-contents-matplotlib",
    "title": "Introduction to Numpy & Matplotlib",
    "section": "Section 4: Visualizing Array contents (Matplotlib)",
    "text": "Section 4: Visualizing Array contents (Matplotlib)\nSimple Lineplot\nplt.plot(gdp_data)\nplt.xlabel('Values')\nplt.ylabel('Sectors')\nplt.title('Values Over Quarters')\nplt.legend()\nplt.grid()\nplt.show()\nLineplot for each sector\ntransposed = gdp_data.T\nfor sector in range(7):\n    plt.plot(transposed[:, sector], label=f'Sector {sector + 1}')\n\nplt.legend()\nplt.grid()\nplt.show()\nBoxplot\ntransposed = gdp_data.T\n\nplt.boxplot(transposed)\nplt.grid()\nplt.show()"
  },
  {
    "objectID": "WorkshopR2025/dasar_r.html",
    "href": "WorkshopR2025/dasar_r.html",
    "title": "Pengenalan R dan RStudio",
    "section": "",
    "text": "Modul ini akan membahas pengenalan, cara install, dan dasar-dasar penggunaan R dan RStudio untuk analisis data.\n\nDefinisi\n\nR adalah bahasa pemrograman yang digunakan untuk mengolah data dan melakukan analisis statistik. Dengan R, kita bisa menghitung, menganalisis, dan membuat grafik dari data yang kita miliki. RStudio adalah perangkat lunak yang membantu kita menggunakan R dengan lebih mudah. Ini adalah tempat di mana kita bisa menulis, menjalankan, dan melihat hasil kode R dengan cara yang sederhana dan teratur. R dan RStudio bersifat open-source atau gratis, tidak memerlukan lisensi penggunaan.\n\nCara Install\n\nUnduh R dan RStudio melalui link di bawah ini :\nLink : https://posit.co/download/rstudio-desktop/\n\nKlik download… pada link di atas untuk mengunduh R dan RStudio\nLangkah untuk mengunduh R dan RStudio untuk laptop OS windows (OS lainnya dapat memilih menyesuaikan).\n\nR\n\nDownload R for Windows -&gt; install R for the first time -&gt; Download R-4.4…\n\n\n\n\nRStudio\n\nKlik download pada website posit sebelumnya dan secara otomatis pada terunduh.\nAplikasi R dan RStudio yang sudah terunduh akan terlihat seperti pada gambar di bawah ini :\n\nInstall kedua aplikasi tersebut seperti menginstall aplikasi pada umumnya.\n\nR dan RStudio yang sudah berhasil terinstall akan tercantum pada list aplikasi di PC/ Laptop. Pengguna cukup membuka aplikasi RStudio untuk melakukan pekerjaan seperti analisis data.\nTampilan antarmuka pertama aplikasi RStudio akan terlihat seperti ini."
  },
  {
    "objectID": "WorkshopR2025/dasar_r.html#install-r-dan-rstudio",
    "href": "WorkshopR2025/dasar_r.html#install-r-dan-rstudio",
    "title": "Pengenalan R dan RStudio",
    "section": "",
    "text": "Modul ini akan membahas pengenalan, cara install, dan dasar-dasar penggunaan R dan RStudio untuk analisis data.\n\nDefinisi\n\nR adalah bahasa pemrograman yang digunakan untuk mengolah data dan melakukan analisis statistik. Dengan R, kita bisa menghitung, menganalisis, dan membuat grafik dari data yang kita miliki. RStudio adalah perangkat lunak yang membantu kita menggunakan R dengan lebih mudah. Ini adalah tempat di mana kita bisa menulis, menjalankan, dan melihat hasil kode R dengan cara yang sederhana dan teratur. R dan RStudio bersifat open-source atau gratis, tidak memerlukan lisensi penggunaan.\n\nCara Install\n\nUnduh R dan RStudio melalui link di bawah ini :\nLink : https://posit.co/download/rstudio-desktop/\n\nKlik download… pada link di atas untuk mengunduh R dan RStudio\nLangkah untuk mengunduh R dan RStudio untuk laptop OS windows (OS lainnya dapat memilih menyesuaikan).\n\nR\n\nDownload R for Windows -&gt; install R for the first time -&gt; Download R-4.4…\n\n\n\n\nRStudio\n\nKlik download pada website posit sebelumnya dan secara otomatis pada terunduh.\nAplikasi R dan RStudio yang sudah terunduh akan terlihat seperti pada gambar di bawah ini :\n\nInstall kedua aplikasi tersebut seperti menginstall aplikasi pada umumnya.\n\nR dan RStudio yang sudah berhasil terinstall akan tercantum pada list aplikasi di PC/ Laptop. Pengguna cukup membuka aplikasi RStudio untuk melakukan pekerjaan seperti analisis data.\nTampilan antarmuka pertama aplikasi RStudio akan terlihat seperti ini."
  },
  {
    "objectID": "WorkshopR2025/dasar_r.html#lembar-kerja-quarto-document-di-rstudio",
    "href": "WorkshopR2025/dasar_r.html#lembar-kerja-quarto-document-di-rstudio",
    "title": "Pengenalan R dan RStudio",
    "section": "2. Lembar Kerja Quarto Document di RStudio",
    "text": "2. Lembar Kerja Quarto Document di RStudio\nAda berbagai cara menjalankan R di RStudio, misalnya menggunakan media console, R script, dan terbaru adalah Quarto Document. Pelatihan ini akan berfokus pada Quarto Document, dengan kelebihan antarmuka yang paling user-friendly.\nLangkah-langkah memulai lembar kerja Quarto :\n\nUntuk membuat file baru Quarto Document, pada pojok kiri RStudio klik/pilih icon Kemudian pilih Quarto Document\n\n\n\nAkan muncul jendela seperti di bawah ini. Hapus ceklis pada baris Editor, kemudian pilih create.\n\n\n\nKlik Install\n\nTampilan akhir Quarto Document yang siap digunakan adalah sebagai berikut :\n\n\nKeterangan :\nBagian di atas disebut sebagai YAML Header. Ini adalah bagian dari dokumen Quarto yang menyediakan metadata dokumen. Informasi ini digunakan untuk mengendalikan bagaimana dokumen dirender. Namun, pada pelatihan ini tidak akan dibahas mengenai render dan publikasi menggunakan quarto dokumen.\n\nQuarto pada dasarnya adalah dokumen yang menggabungkan teks naratif dan kode yang dapat dijalankan untuk menghasilkan dokumen akhir yang diformat dengan baik. Bagian di atas adalah bagian teks, untuk menuliskan catatan dan outline. Tanda ## adalah fungsi header. # heading 1, ## heading 2, ### heading 3, dan seterusnya.\n\nTerkahir, bagian di atas merupakan yang paling utama, yaitu disebut chunk kode R dalam dokumen Quarto. Sebuah chunk adalah bagian dari kode yang dapat dijalankan dalam dokumen.\n\nKlik icon   di bagian kanan atas chunk untuk menjalankan kode sehingga output di bawah akan muncul seperti pada gambar. kita bisa membuat chunk baru secara manual ditulis atau alternatif lainnya dengan cara klik icon  di bagian kanan atas RStudio.\nMenyimpan Lembar Kerja\nMelalui file -&gt; Save atau Ctrl + S\n\nFile akan tersimpan dengan ekstensi .qmd. File ini dapat dibuka kembali di RStudio dengan cara membuka file -&gt; Open File atau seperti membuka file pada umumnya."
  },
  {
    "objectID": "WorkshopR2025/dasar_r.html#pengantar-dasar-dasar-pemrograman-bahasa-r",
    "href": "WorkshopR2025/dasar_r.html#pengantar-dasar-dasar-pemrograman-bahasa-r",
    "title": "Pengenalan R dan RStudio",
    "section": "3. Pengantar Dasar-Dasar Pemrograman Bahasa R",
    "text": "3. Pengantar Dasar-Dasar Pemrograman Bahasa R\nPada bagian ini, kita akan belajar bahasa R dan praktik pada RStudio menggunakan Quarto Document. Perlu diingat kembali, tuliskan atau ketikkan serta jalankan semua kode pada chunk. Kode pada modul ini terdapat pada blocktext yang berwarna abu-abu dan diikuti dengan output-nya. Selamat mencoba.\n\nR Sebagai Kalkulator\n\n2 + 2  \n\n[1] 4\n\n\n\n2 * 2  \n\n[1] 4\n\n\nOperator Aritmatika dalam R\n\n+ : Penjumlahan\n- : Pengurangan\n* : Perkalian\n/ : Pembagian\n^ atau ** : Perpangkatan\n%% : Modulus (Sisa hasil bagi)\n%/% : Pembagian bulat\n\n\n\nRagam Fungsi Simbol Pagar (#)\n\n2 * 2 # Contoh Perkalian\n\n[1] 4\n\n\nDi atas adalah contoh (#) sebagai komentar, artinya teks yang mengikuti tanda pagar tidak akan dieksekusi sebagai kode.\n\n# 2 - 2 , Kode ini tidak bisa dieksekusi (run) atau tidak memiliki arti apapun.\n\nSementara itu, simbol # di luar chunk adalah fungsi header. # heading 1, ## heading 2, ### heading 3, dan seterusnya. Berfungsi untuk membuat outline dokumen yang memudahkan mengakses seluruh bagian pada lembar kerja\n\n\n\nDeklarasi Variabel (Assignment)\nTerdapat 3 (tiga) cara deklarasi variabel dalam R, yaitu dengan simbol &lt;-, =, dan -&gt;.\nSimbol &lt;- adalah simbol yang paling sering digunakan dalam R.\nContoh :\n\nA &lt;- 2  \n\nMengeluarkan (print) output dari variabel A\n\nprint(A)\n\n[1] 2\n\n\nAtau bisa juga dengan cara sederhana\n\nA\n\n[1] 2\n\n\nCara lain deklarasi variabel\n\n3 -&gt; A\nA\n\n[1] 3\n\n\nAtau\n\nA = 4\nA\n\n[1] 4\n\n\nNilai varibel non-numerik harus diapit oleh tanda kutip\n\nB &lt;- \"Halo Semua\"\nB\n\n[1] \"Halo Semua\"\n\n\n\n\nCase Sensitive\n\nR bersifat case sensitive, artinya huruf besar dan huruf kecil dianggap berbeda.\n\n\nA &lt;- 2\nA\n\n[1] 2\n\n\n\na &lt;- 3\nA\n\n[1] 2\n\n\n\nR tidak sensitif terhadap spasi, artinya spasi tidak dianggap sebagai karakter khusus kecuali jika digunakan di dalam fungsi atau nama variabel. Sebagai contoh, spasi tidak boleh digunakan dalam penamaan fungsi seperti c() atau nama variabel seperti regresi1, tidak boleh regresi 1, sebagai alternatif regresi_1\nDeklarasi variabel dengan nama yang sama akan menggantikan nilai variabel sebelumnya.\n\n\nA_1&lt;-2\nA_1\n\n[1] 2\n\n\n\nA_1 &lt;- 3\nA_1\n\n[1] 3\n\n\n\nPenamaan variabel tidak boleh diawali dengan angka, tetapi boleh diikuti dengan angka.\n\n\n# Ini contoh nama variabel yang salah : 1A &lt;- 2\n\n\n# Ini contoh nama variabel yang benar \nA1 &lt;- 2\nA1\n\n[1] 2\n\n\n\n\nOperasi Logika\n\nx &lt;- 5\ny &lt;- 3\n\n\nx &gt; y # Lebih besar     \n\n[1] TRUE\n\nx &lt; y # Lebih kecil     \n\n[1] FALSE\n\nx == y # Sama dengan    \n\n[1] FALSE\n\nx &gt;= y # Lebih besar sama dengan    \n\n[1] TRUE\n\nx &lt;= y # Lebih kecil sama dengan    \n\n[1] FALSE\n\n\n\n\nWarning dan Error\n\nWarnings adalah pesan peringatan yang dikeluarkan oleh R ketika ada sesuatu yang tidak beres dalam kode yang dijalankan. Warnings tidak menghentikan proses eksekusi kode.\nErrors adalah pesan kesalahan yang dikeluarkan oleh R ketika ada kesalahan dalam kode yang dijalankan. Error menghentikan proses eksekusi kode."
  },
  {
    "objectID": "WorkshopR2025/dasar_r.html#tipe-variabel-atau-objek",
    "href": "WorkshopR2025/dasar_r.html#tipe-variabel-atau-objek",
    "title": "Pengenalan R dan RStudio",
    "section": "4. Tipe Variabel atau Objek",
    "text": "4. Tipe Variabel atau Objek\nSecara linguistik, penggunaan istilah “variabel” dan “objek” sangat relatif dan bergantung pada konteks. Misalnya, dalam ekonometrika, “variabel” sering merujuk pada variabel dependen dan independen, sedangkan dalam pemrograman, “variabel” lebih sering merujuk pada objek. Dalam konteks ini, tidak perlu memperdebatkan istilah tersebut, yang penting adalah memahami bahwa variabel atau objek adalah tempat penyimpanan data. Data tersebut dapat berupa angka, karakter, vektor, matriks, data frame, dan lain sebagainya.\n\nSumber : http://venus.ifca.unican.es/Rintro/dataStruct.html\n\nVector: Struktur data satu dimensi yang digunakan untuk menyimpan kumpulan data. Semua elemen di dalam vektor harus memiliki tipe data yang sama.\n\nContoh vektor:\n\nVektor Numerik\nVektor Karakter atau string teks\n\n\nMatrix: Struktur data dua dimensi yang digunakan untuk menyimpan kumpulan. Matriks terdiri dari baris dan kolom, dan setiap elemen di dalam matriks diakses menggunakan dua indeks bilangan bulat. Matriks adalah perpanjangan dari vektor ke dalam dua dimensi.\nArray: Struktur data multi-dimensi (lebih dari dua dimensi) yang digunakan untuk menyimpan data. Array adalah generalisasi dari matriks ke dalam dimensi yang lebih tinggi. Sebagai contoh, array tiga dimensi dapat dianggap sebagai kumpulan dari beberapa matriks.\nData Frame: Generalisasi dari matriks, di mana setiap kolom dapat menyimpan tipe data yang berbeda. Data frame sering digunakan untuk menyimpan data tabular di R, dengan kolom yang bisa berupa tipe data yang berbeda (misalnya, kolom pertama numerik dan kolom kedua karakter).\nList: Kumpulan objek yang berurutan di mana elemen-elemen tersebut bisa memiliki tipe data yang berbeda. Berbeda dengan vektor atau matriks, list dapat menyimpan berbagai tipe data di dalamnya, seperti numerik, karakter, vector, dll.\n\n\nVector\nFungsi yang paling sering digunakan untuk membuat sebuah vector adalah dengan menggunakan fungsi c(). Fungsi c() adalah singkatan dari combine atau concatenate. Fungsi adalah kumpulan perintah yang diberi nama dan dapat digunakan kembali. Contoh lain fungsi misalnya sum() untuk menjumlahkan, mean() untuk menghitung rata-rata, sd() untuk menghitung standar deviasi, dan lain sebagainya.\n\na1 &lt;- c(2,4,7,3) # Numeric vector\na2 &lt;- c(\"one\",\"two\",\"three\") # Character vector\n\nPemanggilan elemen vector\n\na1 # Mengeluarkan vector a1\n\n[1] 2 4 7 3\n\na2[c(1,3)] # Mengeluarkan elemen pertama dan ketiga dari vector a2\n\n[1] \"one\"   \"three\"\n\na1[-1] # Mengeluarkan elemen pertama dari vector a1       \n\n[1] 4 7 3\n\na1[2:4] # Mengeluarkan elemen kedua sampai keempat dari vector a1      \n\n[1] 4 7 3\n\n\nOperasi aritmatika pada vector\n\na &lt;- c(1, 2, 3)\nb &lt;- c(4, 5, 6)\nd &lt;- a + b        \nd                 \n\n[1] 5 7 9\n\n\n\ne &lt;- a - b\ne\n\n[1] -3 -3 -3\n\n\nCara lain membuat vector\n\na3 &lt;- 1:10 # 1 sampai 10\na3\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\n\n\na4 &lt;- seq(1, 10, by = 2) # 1 sampai 10 dengan interval 2\na4\n\n[1] 1 3 5 7 9\n\n\nby adalah contoh argumen dalam fungsi. Argumen adalah option pada fungsi untuk melakukan sesuatu. Dalam hal ini, argumen by digunakan untuk menentukan interval antara dua angka dalam vektor.\n\na5 &lt;- rep(1, 10) # 1 sebanyak 10 kali\na5\n\n [1] 1 1 1 1 1 1 1 1 1 1\n\n\n\n# Letters\na6 &lt;- LETTERS[1:5]\na6\n\n[1] \"A\" \"B\" \"C\" \"D\" \"E\"\n\n\n\n\nMatrix\nMatriks dapat dibuat dengan menggunakan fungsi matrix(). Fungsi ini memiliki beberapa argumen, di antaranya adalah vektor yang akan diubah menjadi matriks, jumlah baris, dan jumlah kolom. Jika jumlah baris atau kolom tidak ditentukan, maka fungsi matrix() akan mengisi baris atau kolom secara otomatis.\n\na4 &lt;- 1:4 \nb1 &lt;- matrix(a4, nrow = 2, ncol = 2)\nb1\n\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4\n\n\n\nb2 &lt;- matrix(1:12,3,4)\nb3 &lt;- matrix(a4,3,4,byrow=TRUE) \nb4 &lt;- matrix(1:14,4,4)\n\nWarning in matrix(1:14, 4, 4): data length [14] is not a sub-multiple or\nmultiple of the number of rows [4]\n\nb2\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12\n\nb3\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    1    2    3    4\n[3,]    1    2    3    4\n\nb4\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    5    9   13\n[2,]    2    6   10   14\n[3,]    3    7   11    1\n[4,]    4    8   12    2\n\n\n\nb2[2,3] # Mengeluarkan elemen baris kedua dan kolom ketiga dari matriks b2   \n\n[1] 8\n\n\n\nb2[1:2,]  # Mengeluarkan baris pertama dan kedua dari matriks b2\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n\n\n\nb2[c(1,3),-2] # Mengeluarkan baris pertama dan ketiga, dan kolom pertama dan ketiga dari matriks b2\n\n     [,1] [,2] [,3]\n[1,]    1    7   10\n[2,]    3    9   12\n\n\nOperasi matriks\n\nm1 &lt;- matrix(c(1, 2, 3, 4, 5, 6), nrow = 2, ncol = 3)\nm2 &lt;- matrix(c(7, 8, 9, 10, 11, 12), nrow = 2, ncol = 3)\n\nm3 &lt;- m1 + m2\nm3\n\n     [,1] [,2] [,3]\n[1,]    8   12   16\n[2,]   10   14   18\n\n\n\nm4 &lt;- m1 %*% t(m2)\nm4\n\n     [,1] [,2]\n[1,]   89   98\n[2,]  116  128\n\n\n\n\nFactor\n\nFactor: Vektor yang digunakan untuk menyimpan variabel kategori. Faktor digunakan untuk mengelompokkan variabel kategori dan biasanya digunakan dalam analisis statistik.\n\n\na5 &lt;- c(\"A\",\"B\",\"AB\",\"O\")\nd1 &lt;- factor(a5) \nlevels(d1)\n\n[1] \"A\"  \"AB\" \"B\"  \"O\" \n\n\n\nlevels(d1) &lt;- c(\"Darah A\",\"Darah AB\",\"Darah B\",\"Darah O\")\nd1\n\n[1] Darah A  Darah B  Darah AB Darah O \nLevels: Darah A Darah AB Darah B Darah O\n\n\n\na6 &lt;- c(\"SMA\",\"SD\",\"SMP\",\"SMA\",\"SMA\",\"SMA\",\"SMA\",\"SMA\",\"SMA\",\"SMA\",\"SMA\",\"SMA\",\"SMA\")\nd5 &lt;- factor(a6, levels=c(\"SD\",\"SMP\",\"SMA\"))\nlevels(d5) \n\n[1] \"SD\"  \"SMP\" \"SMA\"\n\n\n\nd5\n\n [1] SMA SD  SMP SMA SMA SMA SMA SMA SMA SMA SMA SMA SMA\nLevels: SD SMP SMA\n\n\n\n\nList\n\na1; b2; d1\n\n[1] 2 4 7 3\n\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12\n\n\n[1] Darah A  Darah B  Darah AB Darah O \nLevels: Darah A Darah AB Darah B Darah O\n\n\n\ne1 &lt;- list(a1,b2,d1)\ne2 &lt;- list(vect=a1,mat=b2,fac=d1) \ne1\n\n[[1]]\n[1] 2 4 7 3\n\n[[2]]\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12\n\n[[3]]\n[1] Darah A  Darah B  Darah AB Darah O \nLevels: Darah A Darah AB Darah B Darah O\n\ne2\n\n$vect\n[1] 2 4 7 3\n\n$mat\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12\n\n$fac\n[1] Darah A  Darah B  Darah AB Darah O \nLevels: Darah A Darah AB Darah B Darah O\n\n\n\ne1[[1]][2] # Mengeluarkan elemen kedua dari list e1 \n\n[1] 4\n\ne2$fac # Mengeluarkan elemen fac dari list e2\n\n[1] Darah A  Darah B  Darah AB Darah O \nLevels: Darah A Darah AB Darah B Darah O\n\ne2[2] # Mengeluarkan elemen kedua dari list e2\n\n$mat\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12\n\nnames(e2) # Mengeluarkan nama elemen dari list e2\n\n[1] \"vect\" \"mat\"  \"fac\" \n\n\n\n\nData Frame\n\nAngka &lt;- 11:15\nHuruf &lt;- factor(LETTERS[6:10])\nf1 &lt;- data.frame(Angka,Huruf)\nf1\n\n  Angka Huruf\n1    11     F\n2    12     G\n3    13     H\n4    14     I\n5    15     J\n\n\n\nf1[1,2] # Mengeluarkan elemen baris pertama dan kolom kedua dari data frame f1 \n\n[1] F\nLevels: F G H I J\n\nf1$Angka  # Mengeluarkan elemen atau kita sebut variabel Angka dari data frame f1\n\n[1] 11 12 13 14 15\n\nf1[,\"Huruf\"] # Mengeluarkan elemen atau kita sebut variabel Huruf dari data frame f1\n\n[1] F G H I J\nLevels: F G H I J\n\ncolnames(f1) # Mengeluarkan nama kolom dari data frame f1  \n\n[1] \"Angka\" \"Huruf\"\n\n\n\nstr(f1)\n\n'data.frame':   5 obs. of  2 variables:\n $ Angka: int  11 12 13 14 15\n $ Huruf: Factor w/ 5 levels \"F\",\"G\",\"H\",\"I\",..: 1 2 3 4 5\n\n\n\nInteger (int): Menyimpan bilangan bulat.\nContoh: 1, 2, 3\nCharacter (chr): Menyimpan teks atau string.\nContoh: \"A\", \"Hello, world!\", \"1234\"\nNumeric: Menyimpan angka (baik bulat maupun desimal).\nContoh: 3.14, 42"
  },
  {
    "objectID": "WorkshopR2025/dasar_r.html#import-dan-manipulasi-data",
    "href": "WorkshopR2025/dasar_r.html#import-dan-manipulasi-data",
    "title": "Pengenalan R dan RStudio",
    "section": "5. Import dan Manipulasi Data",
    "text": "5. Import dan Manipulasi Data\n\nPackage R dan Fungsi R\n\nPackage:\n\nPaket dalam R adalah kumpulan fungsi, data, dan dokumentasi yang dikemas bersama untuk memudahkan pengguna dalam melakukan tugas.\n\n# install.packages(\"readxl\") - Kode untuk menginstall package readxl\n# Hapus simbol (#) untuk menjalankan\nlibrary(readxl) # fungsi library() digunakan untuk memuat package yang terinstall\n\nreadxl adalah package yang digunakan untuk membaca file excel. Package ini memiliki fungsi read_excel()\n\n#install.packages(\"dplyr\")\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\ndplyr adalah package yang digunakan untuk memanipulasi data. Package ini memiliki fungsi-fungsi seperti select(), filter(), mutate(), summarise(), dan arrange().\nUntuk mengetahui fungsi-fungsi yang ada di dalam package dplyr, kita dapat menggunakan fungsi help().\nhelp(package = \"dplyr\")\nHelp di R untuk fungsi, misal untuk mengetahui cara penggunaan fungsi read_excel :\n?read_excel\n\n\nImport Data\nR dapat mengimpor data dari berbagai sumber, seperti file .xlsx, file .csv, file .txt, .dta (STATA), dan lain sebagainya.\nImport data dari file excel :\n\nlibrary(readxl)\n# read_excel(\"data/iris.xlsx\")\ndata(iris) # Untuk latihan kita pakai data sample bawaan R\ndf1 &lt;- iris\nhead(df1)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\n\nFile csv dapat diimpor dengan menggunakan fungsi read.csv() dari package utils (default atau bawaan di R).\nFile dta dapat diimpor dengan menggunakan fungsi read_dta() dari package haven.\n\n\n\nManipulating Data dengan dplyr\n\nmutate()\nFungsi ini digunakan untuk menambahkan kolom baru ke data frame.\n\ndf2  &lt;- mutate(df1, sepal2 = Sepal.Length + Sepal.Width)\nhead(df2) # Menampilkan 6 baris pertama dari data frame df2\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species sepal2\n1          5.1         3.5          1.4         0.2  setosa    8.6\n2          4.9         3.0          1.4         0.2  setosa    7.9\n3          4.7         3.2          1.3         0.2  setosa    7.9\n4          4.6         3.1          1.5         0.2  setosa    7.7\n5          5.0         3.6          1.4         0.2  setosa    8.6\n6          5.4         3.9          1.7         0.4  setosa    9.3\n\n\n\n\nfilter()\nFungsi ini digunakan untuk memfilter baris berdasarkan kondisi tertentu.\n\ndf1_setosa &lt;- filter(df1, Species==\"setosa\")\nhead(df1_setosa)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\n\ndf1$Species &lt;- as.factor(df1$Species)\nlevels(df1$Species)\n\n[1] \"setosa\"     \"versicolor\" \"virginica\" \n\n\n\ndf3 &lt;- filter(df1, Species==\"setosa\"& Petal.Length==1.3)\nhead(df3)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          4.7         3.2          1.3         0.2  setosa\n2          5.4         3.9          1.3         0.4  setosa\n3          5.5         3.5          1.3         0.2  setosa\n4          4.4         3.0          1.3         0.2  setosa\n5          5.0         3.5          1.3         0.3  setosa\n6          4.5         2.3          1.3         0.3  setosa\n\n\n\ndf3 &lt;- filter(df1, Species==\"setosa\" | Petal.Length==1.3)\nhead(df3)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\n\n\nselect()\nFungsi ini digunakan untuk memilih kolom tertentu dari data frame.\n\ndf4 &lt;- select(df1, Sepal.Length, Species)\nhead(df4)\n\n  Sepal.Length Species\n1          5.1  setosa\n2          4.9  setosa\n3          4.7  setosa\n4          4.6  setosa\n5          5.0  setosa\n6          5.4  setosa\n\n\n\n\narrange()\nFungsi ini digunakan untuk mengurutkan baris berdasarkan kolom tertentu.\n\n# mengurutkan data berdasarkan Petal.Width secara ascending\ndf5 &lt;- arrange(df1, Petal.Width)\nhead(df5)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          4.9         3.1          1.5         0.1  setosa\n2          4.8         3.0          1.4         0.1  setosa\n3          4.3         3.0          1.1         0.1  setosa\n4          5.2         4.1          1.5         0.1  setosa\n5          4.9         3.6          1.4         0.1  setosa\n6          5.1         3.5          1.4         0.2  setosa\n\n\n\n# Mengurutkan data berdasarkan Species dan Petal.Width secara descending\ndf6 &lt;- arrange(df1, Species, desc(Petal.Width)) \nhead(df6)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.0         3.5          1.6         0.6  setosa\n2          5.1         3.3          1.7         0.5  setosa\n3          5.4         3.9          1.7         0.4  setosa\n4          5.7         4.4          1.5         0.4  setosa\n5          5.4         3.9          1.3         0.4  setosa\n6          5.1         3.7          1.5         0.4  setosa\n\n\n\n\nrename()\nFungsi ini digunakan untuk mengubah nama kolom.\n\ndf1 &lt;- rename(df1, panjang_sepal = Sepal.Length)\nhead(df1)\n\n  panjang_sepal Sepal.Width Petal.Length Petal.Width Species\n1           5.1         3.5          1.4         0.2  setosa\n2           4.9         3.0          1.4         0.2  setosa\n3           4.7         3.2          1.3         0.2  setosa\n4           4.6         3.1          1.5         0.2  setosa\n5           5.0         3.6          1.4         0.2  setosa\n6           5.4         3.9          1.7         0.4  setosa\n\n\n\n\nOperarot Pipe |&gt; di dplyr\noperator pipe |&gt; digunakan untuk memudahkan penulisan kode dalam dplyr untuk memanipulasi data dengan beberapa fungsi sekaligus.\n\ndf2 &lt;- df1 |&gt; \n  group_by(Species) |&gt; \n  summarise(rata2_Sepal.Width = mean(Sepal.Width))\ndf2\n\n# A tibble: 3 × 2\n  Species    rata2_Sepal.Width\n  &lt;fct&gt;                  &lt;dbl&gt;\n1 setosa                  3.43\n2 versicolor              2.77\n3 virginica               2.97\n\n\nKode di atas akan menghitung rata-rata Sepal.Width berdasarkan Species dengan fungsi group_by() dan summarise().\n\ndf2 &lt;- df1 %&gt;%\n  filter(Species == \"setosa\") %&gt;%  # Filter spesies setosa\n  select(panjang_sepal, Sepal.Width) %&gt;%  # Pilih kolom Sepal.Length dan Sepal.Width\n  arrange(desc(panjang_sepal))  # Urutkan berdasarkan Sepal.Length secara menurun\nhead(df2)\n\n  panjang_sepal Sepal.Width\n1           5.8         4.0\n2           5.7         4.4\n3           5.7         3.8\n4           5.5         4.2\n5           5.5         3.5\n6           5.4         3.9\n\n\nKode di atas akan memfilter data yang hanya memiliki spesies setosa, memilih kolom Sepal.Length dan Sepal.Width, dan mengurutkan data berdasarkan Sepal.Length secara menurun."
  },
  {
    "objectID": "WorkshopR2025/dasar_r.html#visualisasi-data",
    "href": "WorkshopR2025/dasar_r.html#visualisasi-data",
    "title": "Pengenalan R dan RStudio",
    "section": "6. Visualisasi Data",
    "text": "6. Visualisasi Data\n\nHistogram\n\nhist(df1$panjang_sepal)\n\n\n\n\n\n\n\n\n\n\nBox Plot\n\nboxplot(df1$Petal.Width)\n\n\n\n\n\n\n\n\n\n\nBarplot\n\nbarplot(table(df1$Species))\n\n\n\n\n\n\n\n\n\n\nPie Chart\n\npie(table(df1$Species))\n\n\n\n\n\n\n\n\n\n\nScatter Plot\n\nplot(df1$Petal.Length, df1$Petal.Width)\n\n\n\n\n\n\n\n\n\nplot(df1$panjang_sepal, df1$Sepal.Width, \n     main = \"Sepal Length vs. Sepal Width\", \n     xlab = \"Sepal Length\", ylab = \"Sepal Width\", col = \"red\")"
  },
  {
    "objectID": "WorkshopR2025/dasar_r.html#latihan",
    "href": "WorkshopR2025/dasar_r.html#latihan",
    "title": "Pengenalan R dan RStudio",
    "section": "7. Latihan",
    "text": "7. Latihan\n\nBuatlah objek beri nama latihan1 yang memiliki input berupa angka 6 dan munculkan outputnya.\nBuatlah objek beri nama latihan2 yang memiliki input karakter ’Halo Indonesia” dan munculkan outputnya.\nBuatlah vektor beri nama provinsiyang berisi elemen “Aceh, DKI Jakarta, Sumatera Barat, Riau, Jawa Barat”\nBuatlah vektor beri nama luas_wilayah yang berisi elemen 57682,72156, 42152, 87833, 50604\nBuatlah factor beri nama pulau yang berisi elemen/data Jawa dan Sumatera (Sesuaikan dengan vektor provinsi)\nGabungkan menjadi tabel/data frame dari tiga objek di atas beri nama latihan3.\nTampilkan output dari tabel di atas\nTampilkan hanya variabel/kolom pulau\nGunakan data iris, buat peubah/variabel baru dengan nama sepal1001 yang merupakan data Sepal.Length dikali 100. Jadikan tabel atau data frame baru beri nama dflat1\nTampilkan 6 baris pertama\nFilter data hanya spesies “setosa“ dan “virginica“. Buat jadi tabel baru beri nama dflat2\nTampilkan 6 baris terakhir\nBuat Histogram dan Box Plot dari data iris, berikan argumen seperti memberi judul plot dan warna. Bebas, tidak ada ketentuan."
  },
  {
    "objectID": "WorkshopR2025/dasar_r.html#tips-dan-referensi",
    "href": "WorkshopR2025/dasar_r.html#tips-dan-referensi",
    "title": "Pengenalan R dan RStudio",
    "section": "8. Tips dan Referensi",
    "text": "8. Tips dan Referensi\n\nMembaca banyak dokumentasi R misal di rpubs dan github\nIntegrasi AI: Chat GPT, Copilot, Gemini\nBuku\n\n\nPemesanan: https://bit.ly/buku-jurnal-rstudio2"
  },
  {
    "objectID": "WorkshopR2025/sem.html",
    "href": "WorkshopR2025/sem.html",
    "title": "Pemodelan SEM (Structural Equation Modeling) dan PLS SEM",
    "section": "",
    "text": "Import Data\n\ndatasem &lt;- read.csv('data/data_sem.csv')\nhead(datasem)\n\n     y1       y2       y3       y4       y5       y6       y7       y8       x1\n1  2.50 0.000000 3.333333 0.000000 1.250000 0.000000 3.726360 3.333333 4.442651\n2  1.25 0.000000 3.333333 0.000000 6.250000 1.100000 6.666666 0.736999 5.384495\n3  7.50 8.800000 9.999998 9.199991 8.750000 8.094061 9.999998 8.211809 5.961005\n4  8.90 8.800000 9.999998 9.199991 8.907948 8.127979 9.999998 4.615086 6.285998\n5 10.00 3.333333 9.999998 6.666666 7.500000 3.333333 9.999998 6.666666 5.863631\n6  7.50 3.333333 6.666666 6.666666 6.250000 1.100000 6.666666 0.368500 5.533389\n        x2       x3\n1 3.637586 2.557615\n2 5.062595 3.568079\n3 6.255750 5.224433\n4 7.567863 6.267495\n5 6.818924 4.573679\n6 5.135798 3.892270\n\n\n\nstr(datasem)\n\n'data.frame':   75 obs. of  11 variables:\n $ y1: num  2.5 1.25 7.5 8.9 10 7.5 7.5 7.5 2.5 10 ...\n $ y2: num  0 0 8.8 8.8 3.33 ...\n $ y3: num  3.33 3.33 10 10 10 ...\n $ y4: num  0 0 9.2 9.2 6.67 ...\n $ y5: num  1.25 6.25 8.75 8.91 7.5 ...\n $ y6: num  0 1.1 8.09 8.13 3.33 ...\n $ y7: num  3.73 6.67 10 10 10 ...\n $ y8: num  3.333 0.737 8.212 4.615 6.667 ...\n $ x1: num  4.44 5.38 5.96 6.29 5.86 ...\n $ x2: num  3.64 5.06 6.26 7.57 6.82 ...\n $ x3: num  2.56 3.57 5.22 6.27 4.57 ...\n\n\nDeskripsi Data\nCase study pelatihan analisis SEM dengan RStudio menggunakan dataset PoliticalDemocracy.\nIndustrialization and Political Democracy\nDataset Industrialization and Political Democracy—sering disebut “dataset terkenal” dalam buku Kenneth A. Bollen (1989)—berisi beragam indikator demokrasi politik dan industrialisasi di negara-negara berkembang.\n\n75 observasi × 11 variabel\n\nSetiap baris mewakili satu negara.\n\n\n\n\nIndikator\nKeterangan\n\n\n\n\ny1\nPenilaian pakar atas kebebasan pers (1960)\n\n\ny2\nKebebasan oposisi politik (1960)\n\n\ny3\nKejujuran pemilu (1960)\n\n\ny4\nEfektivitas legislatif terpilih (1960)\n\n\ny5\nPenilaian pakar atas kebebasan pers (1965)\n\n\ny6\nKebebasan oposisi politik (1965)\n\n\ny7\nKejujuran pemilu (1965)\n\n\ny8\nEfektivitas legislatif terpilih (1965)\n\n\nx1\nProduk Nasional Bruto (PNB) per kapita (1960)\n\n\nx2\nKonsumsi energi inanimat per kapita (1960)\n\n\nx3\nPersentase tenaga kerja di industri (1960)\n\n\n\n\nCatatan: Variabel y1–y8 mengukur aspek-aspek demokrasi politik pada dua titik waktu (1960 & 1965), sementara x1–x3 menggambarkan tingkat industrialisasi pada 1960.\n\nPertanyaan penelitian sebagai dasar pemodelan SEM yaitu “Sejauh mana tingkat industrialisasi pada tahun 1960 memengaruhi tingkat demokrasi politik pada tahun 1960, dan bagaimana pengaruh demokrasi politik tahun 1960 tersebut menerus pada tingkat demokrasi politik tahun 1965?”\nAtau jika digambarkan dalam diagram jalur (path), model SEM yang diusulkan adalah sebagai berikut:\n\n\n\n\nDi R, pemodelan SEM dapat dilakukan dengan menggunakan paket R lavaan. lavaan kepanjangan dari Latent Variable Analysis.\ninstall.packages(“lavaan”). Muatlavaan dengan perintah library.\n\nlibrary(lavaan)\n\n\nmyModel &lt;- ' \n # latent variables \n   ind60 =~ x1 + x2 + x3 \n   dem60 =~ y1 + y2 + y3 + y4 \n   dem65 =~ y5 + y6 + y7 + y8 \n # regressions\n   dem60 ~ ind60 \n   dem65 ~ ind60 + dem60 \n # residual covariance\n   y1 ~~ y5\n   y2 ~~ y4 + y6 \n   y3 ~~ y7 \n   y4 ~~ y8\n   y6 ~~ y8\n'\nfit &lt;- sem(model = myModel, data = PoliticalDemocracy) \n\nKeterangan:\n\nDefinisi variabel laten (=~)\n\nRumus regresi (~)\n\nRumus (ko)varians (~~)\n\ninstall.packages(“semPlot”). Membuat path diagram dengan menggunakan paket semPlot.\n\nlibrary(semPlot)\nsemPaths(fit)\n\n\n\n\n\n\n\n\n\nsemPaths(fit, what = 'std', edge.label.cex=.9, curvePivot = TRUE)\n\n\n\n\n\n\n\n\nOutput Model:\nArgumen standardized=TRUE untuk menampilkan hasil analisis dengan koefisien standar (standardized coefficients). Dengan koefisien standar, kita dapat membandingkan kekuatan pengaruh antar variabel laten. Semakin besar nilai koefisien standar, semakin besar pengaruh variabel tersebut terhadap variabel lainnya.\n\nsummary(fit, standardized=TRUE)\n\nlavaan 0.6-19 ended normally after 68 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        31\n\n  Number of observations                            75\n\nModel Test User Model:\n                                                      \n  Test statistic                                38.125\n  Degrees of freedom                                35\n  P-value (Chi-square)                           0.329\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)   Std.lv  Std.all\n  ind60 =~                                                              \n    x1                1.000                               0.670    0.920\n    x2                2.180    0.139   15.742    0.000    1.460    0.973\n    x3                1.819    0.152   11.967    0.000    1.218    0.872\n  dem60 =~                                                              \n    y1                1.000                               2.223    0.850\n    y2                1.257    0.182    6.889    0.000    2.794    0.717\n    y3                1.058    0.151    6.987    0.000    2.351    0.722\n    y4                1.265    0.145    8.722    0.000    2.812    0.846\n  dem65 =~                                                              \n    y5                1.000                               2.103    0.808\n    y6                1.186    0.169    7.024    0.000    2.493    0.746\n    y7                1.280    0.160    8.002    0.000    2.691    0.824\n    y8                1.266    0.158    8.007    0.000    2.662    0.828\n\nRegressions:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)   Std.lv  Std.all\n  dem60 ~                                                               \n    ind60             1.483    0.399    3.715    0.000    0.447    0.447\n  dem65 ~                                                               \n    ind60             0.572    0.221    2.586    0.010    0.182    0.182\n    dem60             0.837    0.098    8.514    0.000    0.885    0.885\n\nCovariances:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)   Std.lv  Std.all\n .y1 ~~                                                                 \n   .y5                0.624    0.358    1.741    0.082    0.624    0.296\n .y2 ~~                                                                 \n   .y4                1.313    0.702    1.871    0.061    1.313    0.273\n   .y6                2.153    0.734    2.934    0.003    2.153    0.356\n .y3 ~~                                                                 \n   .y7                0.795    0.608    1.308    0.191    0.795    0.191\n .y4 ~~                                                                 \n   .y8                0.348    0.442    0.787    0.431    0.348    0.109\n .y6 ~~                                                                 \n   .y8                1.356    0.568    2.386    0.017    1.356    0.338\n\nVariances:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)   Std.lv  Std.all\n   .x1                0.082    0.019    4.184    0.000    0.082    0.154\n   .x2                0.120    0.070    1.718    0.086    0.120    0.053\n   .x3                0.467    0.090    5.177    0.000    0.467    0.239\n   .y1                1.891    0.444    4.256    0.000    1.891    0.277\n   .y2                7.373    1.374    5.366    0.000    7.373    0.486\n   .y3                5.067    0.952    5.324    0.000    5.067    0.478\n   .y4                3.148    0.739    4.261    0.000    3.148    0.285\n   .y5                2.351    0.480    4.895    0.000    2.351    0.347\n   .y6                4.954    0.914    5.419    0.000    4.954    0.443\n   .y7                3.431    0.713    4.814    0.000    3.431    0.322\n   .y8                3.254    0.695    4.685    0.000    3.254    0.315\n    ind60             0.448    0.087    5.173    0.000    1.000    1.000\n   .dem60             3.956    0.921    4.295    0.000    0.800    0.800\n   .dem65             0.172    0.215    0.803    0.422    0.039    0.039\n\n\nMemperoleh GOF (Goodness of Fit) model SEM.\n\nfitMeasures(fit)\n\n                 npar                  fmin                 chisq \n               31.000                 0.254                38.125 \n                   df                pvalue        baseline.chisq \n               35.000                 0.329               730.654 \n          baseline.df       baseline.pvalue                   cfi \n               55.000                 0.000                 0.995 \n                  tli                  nnfi                   rfi \n                0.993                 0.993                 0.918 \n                  nfi                  pnfi                   ifi \n                0.948                 0.603                 0.996 \n                  rni                  logl     unrestricted.logl \n                0.995             -1547.791             -1528.728 \n                  aic                   bic                ntotal \n             3157.582              3229.424                75.000 \n                 bic2                 rmsea        rmsea.ci.lower \n             3131.720                 0.035                 0.000 \n       rmsea.ci.upper        rmsea.ci.level          rmsea.pvalue \n                0.092                 0.900                 0.611 \n       rmsea.close.h0 rmsea.notclose.pvalue     rmsea.notclose.h0 \n                0.050                 0.114                 0.080 \n                  rmr            rmr_nomean                  srmr \n                0.276                 0.276                 0.044 \n         srmr_bentler   srmr_bentler_nomean                  crmr \n                0.044                 0.044                 0.049 \n          crmr_nomean            srmr_mplus     srmr_mplus_nomean \n                0.049                 0.045                 0.045 \n                cn_05                 cn_01                   gfi \n               98.970               113.803                 0.923 \n                 agfi                  pgfi                   mfi \n                0.854                 0.489                 0.979 \n                 ecvi \n                1.335 \n\n\nContoh trashold fit measures yang diterima:\n\nCatatan Penentuan model koragam residual (residual covariance) pada model SEM ini dilakukan dengan mengeksplorasi melalui analisis korelasi.\n\nround(cor(PoliticalDemocracy),2)\n\n     y1   y2   y3   y4   y5   y6   y7   y8   x1   x2   x3\ny1 1.00 0.60 0.68 0.69 0.74 0.65 0.67 0.67 0.38 0.32 0.25\ny2 0.60 1.00 0.45 0.72 0.54 0.71 0.58 0.61 0.21 0.25 0.21\ny3 0.68 0.45 1.00 0.61 0.58 0.43 0.65 0.53 0.33 0.31 0.23\ny4 0.69 0.72 0.61 1.00 0.65 0.66 0.68 0.74 0.47 0.44 0.39\ny5 0.74 0.54 0.58 0.65 1.00 0.56 0.68 0.63 0.56 0.52 0.43\ny6 0.65 0.71 0.43 0.66 0.56 1.00 0.61 0.75 0.34 0.35 0.33\ny7 0.67 0.58 0.65 0.68 0.68 0.61 1.00 0.71 0.39 0.40 0.35\ny8 0.67 0.61 0.53 0.74 0.63 0.75 0.71 1.00 0.46 0.46 0.37\nx1 0.38 0.21 0.33 0.47 0.56 0.34 0.39 0.46 1.00 0.89 0.80\nx2 0.32 0.25 0.31 0.44 0.52 0.35 0.40 0.46 0.89 1.00 0.85\nx3 0.25 0.21 0.23 0.39 0.43 0.33 0.35 0.37 0.80 0.85 1.00\n\n\nBelajar lebih lanjut tentang pemodelan SEM dengan menggunakan paket lavaan dapat diakses di sini."
  },
  {
    "objectID": "WorkshopR2025/sem.html#sem",
    "href": "WorkshopR2025/sem.html#sem",
    "title": "Pemodelan SEM (Structural Equation Modeling) dan PLS SEM",
    "section": "",
    "text": "Import Data\n\ndatasem &lt;- read.csv('data/data_sem.csv')\nhead(datasem)\n\n     y1       y2       y3       y4       y5       y6       y7       y8       x1\n1  2.50 0.000000 3.333333 0.000000 1.250000 0.000000 3.726360 3.333333 4.442651\n2  1.25 0.000000 3.333333 0.000000 6.250000 1.100000 6.666666 0.736999 5.384495\n3  7.50 8.800000 9.999998 9.199991 8.750000 8.094061 9.999998 8.211809 5.961005\n4  8.90 8.800000 9.999998 9.199991 8.907948 8.127979 9.999998 4.615086 6.285998\n5 10.00 3.333333 9.999998 6.666666 7.500000 3.333333 9.999998 6.666666 5.863631\n6  7.50 3.333333 6.666666 6.666666 6.250000 1.100000 6.666666 0.368500 5.533389\n        x2       x3\n1 3.637586 2.557615\n2 5.062595 3.568079\n3 6.255750 5.224433\n4 7.567863 6.267495\n5 6.818924 4.573679\n6 5.135798 3.892270\n\n\n\nstr(datasem)\n\n'data.frame':   75 obs. of  11 variables:\n $ y1: num  2.5 1.25 7.5 8.9 10 7.5 7.5 7.5 2.5 10 ...\n $ y2: num  0 0 8.8 8.8 3.33 ...\n $ y3: num  3.33 3.33 10 10 10 ...\n $ y4: num  0 0 9.2 9.2 6.67 ...\n $ y5: num  1.25 6.25 8.75 8.91 7.5 ...\n $ y6: num  0 1.1 8.09 8.13 3.33 ...\n $ y7: num  3.73 6.67 10 10 10 ...\n $ y8: num  3.333 0.737 8.212 4.615 6.667 ...\n $ x1: num  4.44 5.38 5.96 6.29 5.86 ...\n $ x2: num  3.64 5.06 6.26 7.57 6.82 ...\n $ x3: num  2.56 3.57 5.22 6.27 4.57 ...\n\n\nDeskripsi Data\nCase study pelatihan analisis SEM dengan RStudio menggunakan dataset PoliticalDemocracy.\nIndustrialization and Political Democracy\nDataset Industrialization and Political Democracy—sering disebut “dataset terkenal” dalam buku Kenneth A. Bollen (1989)—berisi beragam indikator demokrasi politik dan industrialisasi di negara-negara berkembang.\n\n75 observasi × 11 variabel\n\nSetiap baris mewakili satu negara.\n\n\n\n\nIndikator\nKeterangan\n\n\n\n\ny1\nPenilaian pakar atas kebebasan pers (1960)\n\n\ny2\nKebebasan oposisi politik (1960)\n\n\ny3\nKejujuran pemilu (1960)\n\n\ny4\nEfektivitas legislatif terpilih (1960)\n\n\ny5\nPenilaian pakar atas kebebasan pers (1965)\n\n\ny6\nKebebasan oposisi politik (1965)\n\n\ny7\nKejujuran pemilu (1965)\n\n\ny8\nEfektivitas legislatif terpilih (1965)\n\n\nx1\nProduk Nasional Bruto (PNB) per kapita (1960)\n\n\nx2\nKonsumsi energi inanimat per kapita (1960)\n\n\nx3\nPersentase tenaga kerja di industri (1960)\n\n\n\n\nCatatan: Variabel y1–y8 mengukur aspek-aspek demokrasi politik pada dua titik waktu (1960 & 1965), sementara x1–x3 menggambarkan tingkat industrialisasi pada 1960.\n\nPertanyaan penelitian sebagai dasar pemodelan SEM yaitu “Sejauh mana tingkat industrialisasi pada tahun 1960 memengaruhi tingkat demokrasi politik pada tahun 1960, dan bagaimana pengaruh demokrasi politik tahun 1960 tersebut menerus pada tingkat demokrasi politik tahun 1965?”\nAtau jika digambarkan dalam diagram jalur (path), model SEM yang diusulkan adalah sebagai berikut:\n\n\n\n\nDi R, pemodelan SEM dapat dilakukan dengan menggunakan paket R lavaan. lavaan kepanjangan dari Latent Variable Analysis.\ninstall.packages(“lavaan”). Muatlavaan dengan perintah library.\n\nlibrary(lavaan)\n\n\nmyModel &lt;- ' \n # latent variables \n   ind60 =~ x1 + x2 + x3 \n   dem60 =~ y1 + y2 + y3 + y4 \n   dem65 =~ y5 + y6 + y7 + y8 \n # regressions\n   dem60 ~ ind60 \n   dem65 ~ ind60 + dem60 \n # residual covariance\n   y1 ~~ y5\n   y2 ~~ y4 + y6 \n   y3 ~~ y7 \n   y4 ~~ y8\n   y6 ~~ y8\n'\nfit &lt;- sem(model = myModel, data = PoliticalDemocracy) \n\nKeterangan:\n\nDefinisi variabel laten (=~)\n\nRumus regresi (~)\n\nRumus (ko)varians (~~)\n\ninstall.packages(“semPlot”). Membuat path diagram dengan menggunakan paket semPlot.\n\nlibrary(semPlot)\nsemPaths(fit)\n\n\n\n\n\n\n\n\n\nsemPaths(fit, what = 'std', edge.label.cex=.9, curvePivot = TRUE)\n\n\n\n\n\n\n\n\nOutput Model:\nArgumen standardized=TRUE untuk menampilkan hasil analisis dengan koefisien standar (standardized coefficients). Dengan koefisien standar, kita dapat membandingkan kekuatan pengaruh antar variabel laten. Semakin besar nilai koefisien standar, semakin besar pengaruh variabel tersebut terhadap variabel lainnya.\n\nsummary(fit, standardized=TRUE)\n\nlavaan 0.6-19 ended normally after 68 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        31\n\n  Number of observations                            75\n\nModel Test User Model:\n                                                      \n  Test statistic                                38.125\n  Degrees of freedom                                35\n  P-value (Chi-square)                           0.329\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)   Std.lv  Std.all\n  ind60 =~                                                              \n    x1                1.000                               0.670    0.920\n    x2                2.180    0.139   15.742    0.000    1.460    0.973\n    x3                1.819    0.152   11.967    0.000    1.218    0.872\n  dem60 =~                                                              \n    y1                1.000                               2.223    0.850\n    y2                1.257    0.182    6.889    0.000    2.794    0.717\n    y3                1.058    0.151    6.987    0.000    2.351    0.722\n    y4                1.265    0.145    8.722    0.000    2.812    0.846\n  dem65 =~                                                              \n    y5                1.000                               2.103    0.808\n    y6                1.186    0.169    7.024    0.000    2.493    0.746\n    y7                1.280    0.160    8.002    0.000    2.691    0.824\n    y8                1.266    0.158    8.007    0.000    2.662    0.828\n\nRegressions:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)   Std.lv  Std.all\n  dem60 ~                                                               \n    ind60             1.483    0.399    3.715    0.000    0.447    0.447\n  dem65 ~                                                               \n    ind60             0.572    0.221    2.586    0.010    0.182    0.182\n    dem60             0.837    0.098    8.514    0.000    0.885    0.885\n\nCovariances:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)   Std.lv  Std.all\n .y1 ~~                                                                 \n   .y5                0.624    0.358    1.741    0.082    0.624    0.296\n .y2 ~~                                                                 \n   .y4                1.313    0.702    1.871    0.061    1.313    0.273\n   .y6                2.153    0.734    2.934    0.003    2.153    0.356\n .y3 ~~                                                                 \n   .y7                0.795    0.608    1.308    0.191    0.795    0.191\n .y4 ~~                                                                 \n   .y8                0.348    0.442    0.787    0.431    0.348    0.109\n .y6 ~~                                                                 \n   .y8                1.356    0.568    2.386    0.017    1.356    0.338\n\nVariances:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)   Std.lv  Std.all\n   .x1                0.082    0.019    4.184    0.000    0.082    0.154\n   .x2                0.120    0.070    1.718    0.086    0.120    0.053\n   .x3                0.467    0.090    5.177    0.000    0.467    0.239\n   .y1                1.891    0.444    4.256    0.000    1.891    0.277\n   .y2                7.373    1.374    5.366    0.000    7.373    0.486\n   .y3                5.067    0.952    5.324    0.000    5.067    0.478\n   .y4                3.148    0.739    4.261    0.000    3.148    0.285\n   .y5                2.351    0.480    4.895    0.000    2.351    0.347\n   .y6                4.954    0.914    5.419    0.000    4.954    0.443\n   .y7                3.431    0.713    4.814    0.000    3.431    0.322\n   .y8                3.254    0.695    4.685    0.000    3.254    0.315\n    ind60             0.448    0.087    5.173    0.000    1.000    1.000\n   .dem60             3.956    0.921    4.295    0.000    0.800    0.800\n   .dem65             0.172    0.215    0.803    0.422    0.039    0.039\n\n\nMemperoleh GOF (Goodness of Fit) model SEM.\n\nfitMeasures(fit)\n\n                 npar                  fmin                 chisq \n               31.000                 0.254                38.125 \n                   df                pvalue        baseline.chisq \n               35.000                 0.329               730.654 \n          baseline.df       baseline.pvalue                   cfi \n               55.000                 0.000                 0.995 \n                  tli                  nnfi                   rfi \n                0.993                 0.993                 0.918 \n                  nfi                  pnfi                   ifi \n                0.948                 0.603                 0.996 \n                  rni                  logl     unrestricted.logl \n                0.995             -1547.791             -1528.728 \n                  aic                   bic                ntotal \n             3157.582              3229.424                75.000 \n                 bic2                 rmsea        rmsea.ci.lower \n             3131.720                 0.035                 0.000 \n       rmsea.ci.upper        rmsea.ci.level          rmsea.pvalue \n                0.092                 0.900                 0.611 \n       rmsea.close.h0 rmsea.notclose.pvalue     rmsea.notclose.h0 \n                0.050                 0.114                 0.080 \n                  rmr            rmr_nomean                  srmr \n                0.276                 0.276                 0.044 \n         srmr_bentler   srmr_bentler_nomean                  crmr \n                0.044                 0.044                 0.049 \n          crmr_nomean            srmr_mplus     srmr_mplus_nomean \n                0.049                 0.045                 0.045 \n                cn_05                 cn_01                   gfi \n               98.970               113.803                 0.923 \n                 agfi                  pgfi                   mfi \n                0.854                 0.489                 0.979 \n                 ecvi \n                1.335 \n\n\nContoh trashold fit measures yang diterima:\n\nCatatan Penentuan model koragam residual (residual covariance) pada model SEM ini dilakukan dengan mengeksplorasi melalui analisis korelasi.\n\nround(cor(PoliticalDemocracy),2)\n\n     y1   y2   y3   y4   y5   y6   y7   y8   x1   x2   x3\ny1 1.00 0.60 0.68 0.69 0.74 0.65 0.67 0.67 0.38 0.32 0.25\ny2 0.60 1.00 0.45 0.72 0.54 0.71 0.58 0.61 0.21 0.25 0.21\ny3 0.68 0.45 1.00 0.61 0.58 0.43 0.65 0.53 0.33 0.31 0.23\ny4 0.69 0.72 0.61 1.00 0.65 0.66 0.68 0.74 0.47 0.44 0.39\ny5 0.74 0.54 0.58 0.65 1.00 0.56 0.68 0.63 0.56 0.52 0.43\ny6 0.65 0.71 0.43 0.66 0.56 1.00 0.61 0.75 0.34 0.35 0.33\ny7 0.67 0.58 0.65 0.68 0.68 0.61 1.00 0.71 0.39 0.40 0.35\ny8 0.67 0.61 0.53 0.74 0.63 0.75 0.71 1.00 0.46 0.46 0.37\nx1 0.38 0.21 0.33 0.47 0.56 0.34 0.39 0.46 1.00 0.89 0.80\nx2 0.32 0.25 0.31 0.44 0.52 0.35 0.40 0.46 0.89 1.00 0.85\nx3 0.25 0.21 0.23 0.39 0.43 0.33 0.35 0.37 0.80 0.85 1.00\n\n\nBelajar lebih lanjut tentang pemodelan SEM dengan menggunakan paket lavaan dapat diakses di sini."
  },
  {
    "objectID": "WorkshopR2025/sem.html#pls-sem",
    "href": "WorkshopR2025/sem.html#pls-sem",
    "title": "Pemodelan SEM (Structural Equation Modeling) dan PLS SEM",
    "section": "PLS SEM",
    "text": "PLS SEM\n\nEksplorasi Data\nImport Data. Jangan lupa untuk menginstall package readxl terlebih dahulu karena data yang digunakan adalah file dengan ekstensi .xlsx.\n\nlibrary(readxl)\ndatapls &lt;- read_excel('data/data_pls_sem.xlsx')\nhead(datapls)\n\n# A tibble: 6 × 45\n  Perusahaan Provinsi   Pulau    A1    A2    A3    A4    A5    A6    A7    A8\n       &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1          1 Jawa Barat Jawa      4     5     5     4     4     4     5     5\n2          2 Jawa Timur Jawa      5     5     5     5     4     5     5     5\n3          3 Jawa Timur Jawa      4     4     4     4     4     4     5     5\n4          4 Jawa Barat Jawa      4     4     3     4     4     4     4     4\n5          5 Jawa Timur Jawa      4     4     4     3     4     4     4     4\n6          6 Jawa Timur Jawa      4     4     5     4     4     4     4     4\n# ℹ 34 more variables: Atotal &lt;dbl&gt;, B1 &lt;dbl&gt;, B2 &lt;dbl&gt;, Btotal &lt;dbl&gt;,\n#   C1 &lt;dbl&gt;, C2 &lt;dbl&gt;, Ctotal &lt;dbl&gt;, D1 &lt;dbl&gt;, D2 &lt;dbl&gt;, D3 &lt;dbl&gt;, D4 &lt;dbl&gt;,\n#   Dtotal &lt;dbl&gt;, E1 &lt;dbl&gt;, E2 &lt;dbl&gt;, E3 &lt;dbl&gt;, E4 &lt;dbl&gt;, E5 &lt;dbl&gt;, E6 &lt;dbl&gt;,\n#   E7 &lt;dbl&gt;, E8 &lt;dbl&gt;, E9 &lt;dbl&gt;, E10 &lt;dbl&gt;, E11 &lt;dbl&gt;, E12 &lt;dbl&gt;,\n#   Etotal &lt;dbl&gt;, F1 &lt;dbl&gt;, F2 &lt;dbl&gt;, F3 &lt;dbl&gt;, F4 &lt;dbl&gt;, F5 &lt;dbl&gt;, F6 &lt;dbl&gt;,\n#   F7 &lt;dbl&gt;, F8 &lt;dbl&gt;, Ftotal &lt;dbl&gt;\n\n\n\nstr(datapls)\n\ntibble [300 × 45] (S3: tbl_df/tbl/data.frame)\n $ Perusahaan: num [1:300] 1 2 3 4 5 6 7 8 9 10 ...\n $ Provinsi  : chr [1:300] \"Jawa Barat\" \"Jawa Timur\" \"Jawa Timur\" \"Jawa Barat\" ...\n $ Pulau     : chr [1:300] \"Jawa\" \"Jawa\" \"Jawa\" \"Jawa\" ...\n $ A1        : num [1:300] 4 5 4 4 4 4 4 5 4 5 ...\n $ A2        : num [1:300] 5 5 4 4 4 4 4 5 4 5 ...\n $ A3        : num [1:300] 5 5 4 3 4 5 4 5 3 5 ...\n $ A4        : num [1:300] 4 5 4 4 3 4 4 5 3 5 ...\n $ A5        : num [1:300] 4 4 4 4 4 4 4 5 3 5 ...\n $ A6        : num [1:300] 4 5 4 4 4 4 4 5 3 4 ...\n $ A7        : num [1:300] 5 5 5 4 4 4 4 5 3 5 ...\n $ A8        : num [1:300] 5 5 5 4 4 4 4 5 3 4 ...\n $ Atotal    : num [1:300] 36 39 34 31 31 33 32 40 26 38 ...\n $ B1        : num [1:300] 4 4 4 4 3 5 3 3 3 4 ...\n $ B2        : num [1:300] 4 4 4 3 4 4 3 3 2 4 ...\n $ Btotal    : num [1:300] 8 8 8 7 7 9 6 6 5 8 ...\n $ C1        : num [1:300] 4 4 4 4 4 4 4 5 3 4 ...\n $ C2        : num [1:300] 4 4 4 4 4 4 4 4 3 4 ...\n $ Ctotal    : num [1:300] 8 8 8 8 8 8 8 9 6 8 ...\n $ D1        : num [1:300] 4 5 4 4 4 4 4 4 3 4 ...\n $ D2        : num [1:300] 4 5 4 3 4 5 4 4 2 4 ...\n $ D3        : num [1:300] 4 5 4 4 4 4 4 4 3 4 ...\n $ D4        : num [1:300] 4 5 4 5 4 4 4 4 3 4 ...\n $ Dtotal    : num [1:300] 16 20 16 16 16 17 16 16 11 16 ...\n $ E1        : num [1:300] 5 5 4 4 4 4 4 4 3 5 ...\n $ E2        : num [1:300] 5 5 4 4 4 5 4 4 3 5 ...\n $ E3        : num [1:300] 5 5 4 4 4 5 4 5 4 5 ...\n $ E4        : num [1:300] 4 5 4 3 4 5 4 4 3 4 ...\n $ E5        : num [1:300] 4 5 4 4 3 5 4 4 3 4 ...\n $ E6        : num [1:300] 4 5 4 4 4 4 4 4 3 4 ...\n $ E7        : num [1:300] 4 5 4 4 4 5 4 4 3 4 ...\n $ E8        : num [1:300] 4 5 4 4 3 5 4 4 3 4 ...\n $ E9        : num [1:300] 4 5 4 4 4 4 4 4 3 4 ...\n $ E10       : num [1:300] 4 5 4 4 4 5 4 5 3 4 ...\n $ E11       : num [1:300] 4 5 4 3 3 5 4 5 3 4 ...\n $ E12       : num [1:300] 5 5 4 4 4 5 4 5 3 5 ...\n $ Etotal    : num [1:300] 52 60 48 46 45 57 48 52 37 52 ...\n $ F1        : num [1:300] 5 5 4 4 4 5 4 4 2 4 ...\n $ F2        : num [1:300] 4 5 4 4 4 5 4 4 3 3 ...\n $ F3        : num [1:300] 4 5 4 4 4 4 4 4 2 3 ...\n $ F4        : num [1:300] 4 5 4 4 4 5 4 5 3 4 ...\n $ F5        : num [1:300] 4 5 4 4 3 5 4 4 3 3 ...\n $ F6        : num [1:300] 4 5 4 4 3 4 4 5 3 4 ...\n $ F7        : num [1:300] 4 5 4 4 3 4 4 4 3 4 ...\n $ F8        : num [1:300] 4 5 4 4 4 5 4 4 3 4 ...\n $ Ftotal    : num [1:300] 33 40 32 32 29 37 32 34 22 29 ...\n\n\nDataset ini berisi 6 variabel laten dan 44 indikator. Laten dan indikator yang digunakan dalam model PLS-SEM adalah sebagai berikut:\n\nfaktor =~ A1 + A2 + A3 + A4\npermintaan =~ B1 + B2\nindustri =~ C1 + C2\nstrategi =~ D1 + D2 + D3 + D4\nregulasi =~ E1 + E2 + E3 + E4 + E5 + E6\nkesempatan =~ F1 + F2 + F3 + F4\n\n\nData ini adalah data survey dengan isian likert untuk setiap indikatornya. Data likert cocok untuk dianalisis dengan PLS-SEM. Pertanyaan utama dalam penelitian ini adalah “Apakah faktor-faktor yang mempengaruhi kesempatan pelaku usaha ekspansi keluar pulau jawa”.\n\n\nPemodelan\nUntuk PLS-SEM, kita menggunakan paket plspm. Instal paket plspm dengan perintah install.packages(“plspm”). Spesifikasi model jalur (path) dilakukan dengan cara berbeda dengan SEM di paket lavaan.\n\n# Spesifikasi Model\nlibrary(plspm)\n\nfkt &lt;- c(0, 0, 0, 0, 0, 0)\nprm &lt;- c(0, 0, 0, 0, 0, 0)\nind &lt;- c(0, 0, 0, 0, 0, 0)\nstr &lt;- c(0, 0, 0, 0, 0, 0)\nrgl &lt;- c(0, 0, 0, 0, 0, 0)\nksm &lt;- c(1, 1, 1, 1, 1, 0)\n\n\nmodel_path &lt;- data.frame(rbind(fkt, prm, ind, str, rgl, ksm))\ncolnames(model_path) &lt;- rownames(model_path)\nmodel_path &lt;- as.matrix(model_path)\nmodel_path\n\n    fkt prm ind str rgl ksm\nfkt   0   0   0   0   0   0\nprm   0   0   0   0   0   0\nind   0   0   0   0   0   0\nstr   0   0   0   0   0   0\nrgl   0   0   0   0   0   0\nksm   1   1   1   1   1   0\n\n\n\n# Path diagram PLS SEM \ninnerplot(model_path)\n\n\n\n\n\n\n\n\n\ncolnames(datapls)\n\n [1] \"Perusahaan\" \"Provinsi\"   \"Pulau\"      \"A1\"         \"A2\"        \n [6] \"A3\"         \"A4\"         \"A5\"         \"A6\"         \"A7\"        \n[11] \"A8\"         \"Atotal\"     \"B1\"         \"B2\"         \"Btotal\"    \n[16] \"C1\"         \"C2\"         \"Ctotal\"     \"D1\"         \"D2\"        \n[21] \"D3\"         \"D4\"         \"Dtotal\"     \"E1\"         \"E2\"        \n[26] \"E3\"         \"E4\"         \"E5\"         \"E6\"         \"E7\"        \n[31] \"E8\"         \"E9\"         \"E10\"        \"E11\"        \"E12\"       \n[36] \"Etotal\"     \"F1\"         \"F2\"         \"F3\"         \"F4\"        \n[41] \"F5\"         \"F6\"         \"F7\"         \"F8\"         \"Ftotal\"    \n\n\n\n# define latent variable associated with\nmodel_blocks &lt;- list(4:11, 13:14, 16:17, 19:22, 24:35, 37:44)\n\n# run plspm analysis\nmodel_pls &lt;- plspm(Data = datapls, path_matrix = model_path, blocks = model_blocks)\nmodel_pls\n\nPartial Least Squares Path Modeling (PLS-PM) \n---------------------------------------------\n   NAME             DESCRIPTION\n1  $outer_model     outer model\n2  $inner_model     inner model\n3  $path_coefs      path coefficients matrix\n4  $scores          latent variable scores\n5  $crossloadings   cross-loadings\n6  $inner_summary   summary inner model\n7  $effects         total effects\n8  $unidim          unidimensionality\n9  $gof             goodness-of-fit\n10 $boot            bootstrap results\n11 $data            data matrix\n---------------------------------------------\nYou can also use the function 'summary' \n\n\n\nplot(model_pls, what = \"loadings\")\n\n\n\n\n\n\n\n\n\n# Loadings and Communilaties\nmodel_pls$outer_model\n\n   name block     weight   loading communality redundancy\n1    A1   fkt 0.11671478 0.7495037   0.5617558  0.0000000\n2    A2   fkt 0.14562304 0.8897458   0.7916476  0.0000000\n3    A3   fkt 0.14484513 0.8696318   0.7562595  0.0000000\n4    A4   fkt 0.14030249 0.8794022   0.7733483  0.0000000\n5    A5   fkt 0.13788270 0.8970167   0.8046390  0.0000000\n6    A6   fkt 0.15554364 0.9022043   0.8139725  0.0000000\n7    A7   fkt 0.14329234 0.8893271   0.7909027  0.0000000\n8    A8   fkt 0.15281166 0.9303028   0.8654632  0.0000000\n9    B1   prm 0.50306916 0.9307696   0.8663321  0.0000000\n10   B2   prm 0.56266829 0.9450657   0.8931492  0.0000000\n11   C1   ind 0.52731960 0.9525629   0.9073762  0.0000000\n12   C2   ind 0.52292996 0.9517429   0.9058146  0.0000000\n13   D1   str 0.27826922 0.9357511   0.8756301  0.0000000\n14   D2   str 0.28779568 0.9431002   0.8894379  0.0000000\n15   D3   str 0.29426983 0.8976239   0.8057286  0.0000000\n16   D4   str 0.23771383 0.8583662   0.7367925  0.0000000\n17   E1   rgl 0.09339503 0.8750127   0.7656472  0.0000000\n18   E2   rgl 0.08965331 0.8731644   0.7624162  0.0000000\n19   E3   rgl 0.08990195 0.8507580   0.7237893  0.0000000\n20   E4   rgl 0.09641889 0.9044623   0.8180521  0.0000000\n21   E5   rgl 0.09453145 0.8873808   0.7874446  0.0000000\n22   E6   rgl 0.09617754 0.8842870   0.7819635  0.0000000\n23   E7   rgl 0.09903638 0.8859168   0.7848485  0.0000000\n24   E8   rgl 0.09569039 0.8610934   0.7414818  0.0000000\n25   E9   rgl 0.09896653 0.8991443   0.8084606  0.0000000\n26  E10   rgl 0.08964060 0.8585601   0.7371255  0.0000000\n27  E11   rgl 0.09675299 0.8847538   0.7827892  0.0000000\n28  E12   rgl 0.09705734 0.8828197   0.7793706  0.0000000\n29   F1   ksm 0.14459278 0.8903762   0.7927698  0.6735211\n30   F2   ksm 0.14467602 0.9108667   0.8296781  0.7048776\n31   F3   ksm 0.13839597 0.9003330   0.8105995  0.6886688\n32   F4   ksm 0.13950555 0.8774918   0.7699918  0.6541693\n33   F5   ksm 0.13982721 0.8460390   0.7157820  0.6081138\n34   F6   ksm 0.14491477 0.8730652   0.7622429  0.6475860\n35   F7   ksm 0.13581192 0.8518424   0.7256355  0.6164851\n36   F8   ksm 0.15121382 0.8726078   0.7614444  0.6469076\n\n\n\n# Coefficient of Determination\ndt &lt;- data.frame(model_pls$inner_model)\ndt[,1] &lt;- round(dt[,1], 2)\ndt[,2] &lt;- round(dt[,2], 2)\ndt[,3] &lt;- round(dt[,3], 2)\ndt[,4] &lt;- round(dt[,4], 2)\ndt\n\n          ksm.Estimate ksm.Std..Error ksm.t.value ksm.Pr...t..\nIntercept         0.00           0.02        0.00         1.00\nfkt               0.05           0.04        1.16         0.25\nprm               0.01           0.03        0.44         0.66\nind               0.02           0.05        0.51         0.61\nstr               0.14           0.04        3.26         0.00\nrgl               0.74           0.05       16.35         0.00\n\n\nStrategi dan regulasi secara signifikan mempengaruhi kesempatan kerja.\n\nmodel_pls$inner_summary\n\n          Type        R2 Block_Communality Mean_Redundancy       AVE\nfkt  Exogenous 0.0000000         0.7697486       0.0000000 0.7697486\nprm  Exogenous 0.0000000         0.8797407       0.0000000 0.8797407\nind  Exogenous 0.0000000         0.9065954       0.0000000 0.9065954\nstr  Exogenous 0.0000000         0.8268973       0.0000000 0.8268973\nrgl  Exogenous 0.0000000         0.7727824       0.0000000 0.7727824\nksm Endogenous 0.8495796         0.7710180       0.6550412 0.7710180\n\n\n\nplot(model_pls, what = \"inner\", colpos = \"#6890c4BB\", colneg = \"#f9675dBB\", txt.col = \"black\", arr.tcol=\"black\")"
  }
]